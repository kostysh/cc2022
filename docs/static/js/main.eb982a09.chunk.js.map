{"version":3,"sources":["../../index.ts","reportWebVitals.ts","styles.ts","utils/logger.ts","store/reducer.ts","hooks/useWeb3Modal.ts","hooks/useNetworkId.ts","hooks/useAccount.ts","contractLib/utils/regexp.ts","contractLib/utils/codes.ts","contractLib/utils/request.ts","contractLib/utils/errors.ts","config.ts","contractLib/api/getTokenById.ts","contractLib/api/getTokenMetadataById.ts","contractLib/api/getOwnedTokens.ts","contractLib/utils/sendHelper.ts","contractLib/api/mintToken.ts","contractLib/api/isPaused.ts","contractLib/api/estimateMinting.ts","contractLib/api/isFounder.ts","contractLib/index.ts","contractLib/api/isTokenMintable.ts","contractLib/api/getPrice.ts","contractLib/api/getNickName.ts","store/index.tsx","hooks/useToken.ts","hooks/useIsPaused.ts","components/buttons/index.tsx","components/buttons/web3Modal.tsx","utils/strings.ts","components/Account.tsx","hooks/usePoller.ts","components/Layout/Container.tsx","components/Layout/TokenCard.tsx","components/Typography/BlockTitle.tsx","components/Modal/index.tsx","components/MyTokens/index.tsx","hooks/useError.ts","components/AvailChip.tsx","components/ErrorMessage.tsx","components/Mint/MintCard.tsx","components/TokensChecker.tsx","hooks/useTokenRange.ts","components/Team.tsx","components/ContractLink.tsx","pages/Main.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faSyncAlt","faSignInAlt","faSignOutAlt","faCheckCircle","faBan","faSquare","faCheckSquare","faCircle","faPlus","faMinus","colors","fonts","tiny","small","medium","large","h1","h2","h3","h4","h5","h6","normal","semibold","bold","extrabold","Ukraine","IBM","responsive","globalStyle","logFunction","subject","args","console","log","Logger","error","debug","info","logger","reducer","state","action","type","isConnecting","payload","account","isRightNetwork","isEnabled","networkId","provider","injectedProvider","signIn","signOut","token","isOwnTokens","isMintingPaused","errors","filter","e","i","Error","initialState","ethereumAddress","HTTP_STATUS_CODES","OK","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","METHOD_NOT_ALLOWED","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","convertIpfsUri","uri","replace","config","infuraId","process","defaultNetworkId","Number","tokenAddress","imgBase","networks","name","chainId","blockExplorer","getDefaultNetwork","network","n","getTokenAddress","getImgBase","getTokenById","contract","tokenId","a","BN","isBigNumber","from","ownerOf","owner","getNickName","metadata","image","toString","id","toNumber","description","attributes","getTokenMetadataById","getOwnedTokens","ownerAddress","regexp","exec","balance","eq","tokens","push","sendHelper","method","sender","overrides","transactionHashCb","confirmations","SignerObject","contractWithSigner","connect","estimateGas","gasAmount","gasPrice","getBalance","mul","gt","tx","hash","wait","mintToken","getSigner","isPaused","estimateMinting","getPrice","value","mint","isFounder","signer","getAddress","address","CCContract","contractAddress","providerOrUri","this","ethers","providers","JsonRpcProvider","isMetaMask","Web3Provider","send","Contract","CCossacksContract","abi","isTokenMintable","StateContext","createContext","DispatchContext","useAppState","ctx","useContext","useAppDispatch","defaultNetwork","allowedNetworksIds","map","web3ModalConfig","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","AppStateProvider","children","useReducer","dispatch","useState","setProvider","setInjectedProvider","setIsConnecting","setError","web3Modal","useMemo","Web3modal","useCallback","clearCachedProvider","undefined","window","location","reload","providerController","cachedProvider","web3ModalProvider","updateProvider","on","code","reason","message","useEffect","setTimeout","useWeb3Modal","web3ModalError","allowedNetworks","setNetworkId","isLoading","setIsLoading","setIsRightNetwork","getNetworkId","getNetwork","includes","JSON","stringify","useNetworkId","isNetworkIdLoading","networkError","setAccount","setLoading","getAccount","listAccounts","accounts","useAccount","isAccountLoading","accountError","setToken","err","useToken","tokenError","setIsPaused","resetState","checkIsPaused","paused","useIsPaused","isPausedError","Provider","Button","styled","button","RedButton","ConnectButton","GreenButton","ButtonLabelWrapper","div","attrs","props","mr","RefreshButton","refresh","refreshing","onClick","icon","size","spin","color","MintButton","label","loading","SignOutButtonWrapper","LabelDesc","span","LabelMob","SignInButton","disabled","SignOutButton","centerEllipsis","text","width","length","substring","AccountWrapper","AccountIconWrapper","AccountIcon","Blockies","AccountHash","Account","seed","scale","navigator","clipboard","writeText","resolve","Container","ImageWrapper","ImageWrapperInner","TokenCardWrapper","TokenId","TokenImage","height","src","TokenCard","TokenMintCard","BlockTitle","center","Portal","onClose","closeOnEscapeKeyDown","key","keyCode","document","body","addEventListener","removeEventListener","createPortal","getElementById","ModalWrapper","ModalContent","ModalHeader","ModalTitle","ModalBody","ModalFooter","CloseBtn","Modal","title","show","stopPropagation","TokenCardsWrapper","RefreshBtnWrapper","RefreshBtnInner","MyTokens","pollInterval","useError","setRefreshing","ownedTokens","setOwnedTokens","details","setDetails","newOwnedTokens","ownedTokensState","fn","enabled","interval","pollerName","TypeError","failures","poll","usePoller","t","ChipWrapper","selected","IconWrapper","Chip","available","founder","AvailChip","ErrorMessageWrapper","ErrorMessage","CheckerBlock","PriceWrapper","PriceTitle","PriceValue","TxBlock","TxTitle","TxHashValue","fetchTokenMeta","MintCard","tokenPrice","tokenMetadata","setTokenMetadata","metadataLoading","setMetadataLoading","minting","setMinting","txHash","setTxHash","isMinted","setMinted","res","catch","finally","ethersUtils","formatUnits","target","rel","href","ChipsBlock","QueryLabel","Query","textarea","parseQuery","query","range","split","parseInt","to","isTokenExists","TokensChecker","price","setPrice","setRange","checkIsFounder","useTokenRange","rangeError","setQuery","checking","setChecking","checkedList","setCheckedList","mintTokenId","setMintTokenId","resetCheckerResults","check","parsedQuery","Promise","all","checked","rows","onChange","newValue","initialValue","TeamBlockWrapper","TeamBlockTitle","Dude","DudeTitle","DudeImage","img","Team","open","LinkWrapper","Link","Label","Br","br","ContractLink","allowedNetworksNames","PageWrapper","Header","Logo","Title","Spacer","AccountBlock","WrongNetworkMessage","Banner","BannerCossack","BannerBg","CollectionTitle","CollectionInfo","OpenSeaLinkBlock","OsTitle","OsLogo","Main","join","App","GlobalStyle","createGlobalStyle","render"],"mappings":"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","file":"static/js/main.eb982a09.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoCossacks = void 0;\nconst CryptoCossacks2022_json_1 = __importDefault(require(\"./artifacts/contracts/CryptoCossacks2022.sol/CryptoCossacks2022.json\"));\nexports.CryptoCossacks = CryptoCossacks2022_json_1.default;\n//# sourceMappingURL=index.js.map","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  // IconLookup,\n  // IconDefinition,\n  // findIconDefinition,\n  library\n} from '@fortawesome/fontawesome-svg-core';\nimport {\n  faSignInAlt,\n  faSignOutAlt,\n  faSyncAlt,\n  faCheckCircle,\n  faBan,\n  faSquare,\n  faCheckSquare,\n  faCircle,\n  faPlus,\n  faMinus\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faSyncAlt,\n  faSignInAlt,\n  faSignOutAlt,\n  faCheckCircle,\n  faBan,\n  faSquare,\n  faCheckSquare,\n  faCircle,\n  faPlus,\n  faMinus\n);\n\nexport const colors: { [name: string]: string } = {\n  white: '255, 255, 255',\n  light: '245, 245, 245',\n  black: '0, 0, 0',\n  blueblack: '0, 0, 16',\n  dark: '74, 74, 74',\n  lightgrey: '172, 172, 172',\n  grey: '25, 25, 25',\n  green: '96, 223, 181',\n  purple: '101, 94, 179',\n  red: '242, 62, 94',\n};\n\nexport const fonts = {\n  size: {\n    tiny: \"12px\",\n    small: \"16px\",\n    medium: \"19px\",\n    large: \"34px\",\n    h1: \"60px\",\n    h2: \"50px\",\n    h3: \"40px\",\n    h4: \"32px\",\n    h5: \"24px\",\n    h6: \"20px\",\n  },\n  weight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n  },\n  family: {\n    Ukraine: 'Ukraine, sans-serif',\n    IBM: '\"IBM Plex Mono\", monospace',\n  },\n};\n\nexport const transitions = {\n  short: \"all 0.1s ease-in-out\",\n  base: \"all 0.2s ease-in-out\",\n  long: \"all 0.3s ease-in-out\",\n  button: \"all 0.15s ease-in-out\",\n};\n\nexport const shadows = {\n  soft: \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n  medium: \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\n  hover: \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n};\n\nexport const responsive = {\n  xs: '0',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1400px',\n};\n\nexport const globalStyle = `\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Thin.eot);\n    src: url(fonts/e-Ukraine-Thin.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Thin.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Thin.woff) format(\"woff\"), url(fonts/e-Ukraine-Thin.ttf) format(\"truetype\");\n    font-weight: 100;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-UltraLight.eot);\n    src: url(fonts/e-Ukraine-UltraLight.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-UltraLight.woff2) format(\"woff2\"), url(fonts/e-Ukraine-UltraLight.woff) format(\"woff\"), url(fonts/e-Ukraine-UltraLight.ttf) format(\"truetype\");\n    font-weight: 200;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Light.eot);\n    src: url(fonts/e-Ukraine-Light.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Light.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Light.woff) format(\"woff\"), url(fonts/e-Ukraine-Light.ttf) format(\"truetype\");\n    font-weight: 300;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Regular.eot);\n    src: url(fonts/e-Ukraine-Regular.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Regular.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Regular.woff) format(\"woff\"), url(fonts/e-Ukraine-Regular.ttf) format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Medium.eot);\n    src: url(fonts/e-Ukraine-Medium.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Medium.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Medium.woff) format(\"woff\"), url(fonts/e-Ukraine-Medium.ttf) format(\"truetype\");\n    font-weight: 600;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Bold.eot);\n    src: url(fonts/e-Ukraine-Bold.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Bold.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Bold.woff) format(\"woff\"), url(fonts/e-Ukraine-Bold.ttf) format(\"truetype\");\n    font-weight: 700;\n    font-style: normal;\n    font-display: swap\n  }\n\n\n  @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500;600;700&display=swap');\n\n  html, body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    height: auto;\n    font-family: ${fonts.family.Ukraine};\n    font-style: normal;\n    font-stretch: normal;\n    font-weight: ${fonts.weight.normal};\n    font-size: ${fonts.size.medium};\n    background-color: rgb(${colors.blueblack});\n    color: rgb(${colors.white});\n    overflow-y:auto;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n      -webkit-text-size-adjust: 100%;\n    -webkit-overflow-scrolling: touch;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n\n  button {\n    border-style: none;\n    line-height: 1em;\n    background-image: none;\n    outline: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  [tabindex] {\n    outline: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  a, p, h1, h2, h3, h4, h5, h6 {\n    text-decoration: none;\n    margin: 0;\n    padding: 0;\n    margin: 0.7em 0;\n  }\n\n  h1 {\n    font-size: ${fonts.size.h1}\n  }\n  h2 {\n    font-size: ${fonts.size.h2}\n  }\n  h3 {\n    font-size: ${fonts.size.h3}\n  }\n  h4 {\n    font-size: ${fonts.size.h4}\n  }\n  h5 {\n    font-size: ${fonts.size.h5}\n  }\n  h6 {\n    font-size: ${fonts.size.h6}\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;\n    text-decoration: none;\n    color: inherit;\n    outline: none;\n  }\n\n  b,\n  strong {\n    font-weight: inherit;\n    font-weight: bolder;\n  }\n\n  ul, li {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  * {\n    box-sizing: border-box !important;\n  }\n\n\n  input {\n    -webkit-appearance: none;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  input[type=\"color\"],\n  input[type=\"date\"],\n  input[type=\"datetime\"],\n  input[type=\"datetime-local\"],\n  input[type=\"email\"],\n  input[type=\"month\"],\n  input[type=\"number\"],\n  input[type=\"password\"],\n  input[type=\"search\"],\n  input[type=\"tel\"],\n  input[type=\"text\"],\n  input[type=\"time\"],\n  input[type=\"url\"],\n  input[type=\"week\"],\n  select:focus,\n  textarea {\n    font-size: 16px;\n  }\n`;\n","export interface LoggerApi {\n  error: (...message: unknown[]) => void,\n  debug: (...message: unknown[]) => void,\n  info: (...message: unknown[]) => void\n};\n\n// Possible log level types\nconst logLevels: { [k: string]: number } = {\n  'none': 0,\n  'error': 1,\n  'debug': 2,\n  'info': 3\n};\n\n// Getting log level from the ENV\nconst logLevel = logLevels[process.env.REACT_APP_LOG_LEVEL || 'none'] || 0;\n\n// Default logging function\nconst logFunction = (subject: string, args: unknown[]) =>\n  console.log(...[`${subject}:`, ...args]);\n\n// Creates logger\nconst Logger = (subject: string): LoggerApi =>\n  ({\n    error: (...args) => {\n      if (logLevel >= 1) {\n        logFunction(subject, args);\n      }\n    },\n    debug: (...args) => {\n      if (logLevel >= 2) {\n        logFunction(subject, args);\n      }\n    },\n    info: (...args) => {\n      if (logLevel >= 3) {\n        logFunction(subject, args);\n      }\n    }\n  });\n\nexport default Logger;\n","import type { Web3ModalProvider } from '../hooks/useWeb3Modal';\nimport type { IProviderInfo } from 'web3modal';\nimport type { Action } from './actions';\nimport type { CCContract } from '../contractLib';\nimport { useReducer } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('Reducer');\n\nexport interface State {\n  errors: string[];\n  isConnecting: boolean;\n  isRightNetwork: boolean;\n  isEnabled: boolean;\n  isMintingPaused?: boolean;\n  signIn: Function;\n  signOut: Function;\n  networkId?: number;\n  provider?: Web3ModalProvider;\n  injectedProvider?: IProviderInfo;\n  account?: string;\n  token?: CCContract;\n  isOwnTokens?: boolean;\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  logger.debug('Dispatch', action);\n  const type = action.type;\n  switch (type) {\n    case 'SET_CONNECTING':\n      return {\n        ...state,\n        isConnecting: action.payload\n      };\n    case 'SET_ACCOUNT':\n      return {\n        ...state,\n        account: action.payload\n      };\n    case 'SET_IS_RIGHT_NETWORK':\n      return {\n        ...state,\n        isRightNetwork: action.payload\n      };\n    case 'SET_IS_ENABLED':\n      return {\n        ...state,\n        isEnabled: action.payload\n      };\n    case 'SET_NETWORK_ID':\n      return {\n        ...state,\n        networkId: action.payload\n      };\n    case 'SET_PROVIDER':\n      return {\n        ...state,\n        provider: action.payload\n      };\n    case 'SET_INJECTED_PROVIDER':\n      return {\n        ...state,\n        injectedProvider: action.payload\n      };\n    case 'SET_WEB3MODAL_FUNCTIONS':\n      return {\n        ...state,\n        signIn: action.payload.signIn,\n        signOut: action.payload.signOut\n      };\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload\n      };\n    case 'SET_IS_OWN_TOKENS':\n      return {\n        ...state,\n        isOwnTokens: action.payload\n      };\n    case 'SET_MINTING_PAUSED':\n      return {\n        ...state,\n        isMintingPaused: action.payload\n      };\n    case 'ERROR_ADD':\n      return {\n        ...state,\n        errors: [\n          ...state.errors,\n          action.payload\n        ]\n      };\n    case 'ERROR_REMOVE':\n      return {\n        ...state,\n        errors: state.errors.filter((e, i) => i !== action.payload)\n      };\n    case 'ERROR_REMOVE_ALL':\n      return {\n        ...state,\n        errors: []\n      };\n    default:\n      throw new Error(`Unknown state action type: ${type}`);\n  }\n};\n\nconst initialState: State = {\n  isConnecting: false,\n  isRightNetwork: true,\n  isEnabled: false,\n  signIn: () => {},\n  signOut: () => {},\n  errors: []\n};\n\nexport const useAppReducer = () => useReducer(reducer, initialState);\n","import type { IProviderInfo, IProviderControllerOptions } from 'web3modal';\nimport { useMemo, useCallback, useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport Web3modal from 'web3modal';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useWeb3Modal');\n\nexport type Web3ModalConfig = Partial<IProviderControllerOptions>;\n\nexport type Web3ModalProvider = ethers.providers.Web3Provider;\n\nexport type  Web3ModalHook = [\n  provider: Web3ModalProvider | undefined,\n  injectedProvider: IProviderInfo | undefined,\n  isConnecting: boolean,\n  signIn: Function,\n  signOut: Function,\n  error: string | null\n];\n\n// Web3Modal React Hook\nexport const useWeb3Modal = (web3ModalConfig: Web3ModalConfig): Web3ModalHook => {\n  const [provider, setProvider] = useState<Web3ModalProvider | undefined>();\n  const [injectedProvider, setInjectedProvider] = useState<IProviderInfo | undefined>();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Web3Modal initialization\n  const web3Modal = useMemo(\n    () => new Web3modal(web3ModalConfig),\n    [web3ModalConfig]\n  );\n\n  const signOut = useCallback(() => {\n    web3Modal.clearCachedProvider();\n    setProvider(undefined);\n    // SignOut issue when using walletconnect: https://github.com/Web3Modal/web3modal/issues/354\n    logger.info(`Logged Out`);\n    window.location.reload();\n  }, [web3Modal]);\n\n  const signIn = useCallback(async () => {\n    try {\n      setError(null);\n      setIsConnecting(true);\n      setInjectedProvider(\n        (web3Modal as any).providerController.cachedProvider === 'injected'\n          ? (web3Modal as any).providerController.injectedProvider\n          : undefined\n      );\n\n      const web3ModalProvider = await web3Modal.connect();\n\n      const updateProvider = () => setProvider(\n        new ethers.providers.Web3Provider(web3ModalProvider)\n      );\n      updateProvider();\n\n      // Subscribe to provider events compatible with EIP-1193 standard\n      // Subscribe to accounts change\n      web3ModalProvider.on('chainChanged', (chainId: number) => {\n        logger.info(`Chain changed: ${chainId}`);\n        updateProvider();\n      });\n\n      // Subscribe to chainId change\n      web3ModalProvider.on('accountsChanged', () => {\n        logger.info(`Accounts changed`);\n        updateProvider();\n      });\n\n      // Subscribe to provider disconnection\n      web3ModalProvider.on('disconnect', (code: number, reason: string) => {\n        logger.info(`Disconnected with code: ${code} and reason: ${reason}`);\n        signOut();\n      });\n\n      logger.info(`Logged In`);\n    } catch (error) {\n      setIsConnecting(false);\n\n      if (error) {\n        logger.error(error);\n        setError((error as Error).message);\n      } else {\n        logger.error('Unknown error');\n      }\n    }\n  }, [web3Modal, signOut]);\n\n  useEffect(() => {\n    if (!provider && web3Modal.cachedProvider) {\n      signIn();\n    } else if (provider) {\n      setTimeout(() => setIsConnecting(false), 250);\n    }\n  }, [provider, web3Modal.cachedProvider, signIn]);\n\n  return [\n    provider,\n    injectedProvider,\n    isConnecting,\n    signIn,\n    signOut,\n    error\n  ];\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useNetworkId');\n\nexport type NetworkIdHook = [\n  networkId: number | undefined,\n  isNetworkIdLoading: boolean,\n  isRightNetwork: boolean,\n  error: string | null\n];\n\n// useNetworkId react hook\nexport const useNetworkId = (\n  provider: Web3ModalProvider | undefined,\n  allowedNetworks: number[]\n): NetworkIdHook => {\n  const [networkId, setNetworkId] = useState<number | undefined>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRightNetwork, setIsRightNetwork] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setError(null);\n\n    if (!provider) {\n      return setNetworkId(undefined);\n    }\n\n    const getNetworkId = async () => {\n      try {\n        setIsLoading(true);\n        const network = await provider.getNetwork();\n        setIsLoading(false);\n        logger.info('getNetwork:', network);\n\n        if (network) {\n\n          if (allowedNetworks.includes(network.chainId)) {\n            setNetworkId(network.chainId);\n            setIsRightNetwork(true);\n          } else {\n            throw new Error(\n              `Invalid network ${network.chainId} though expected one of ${JSON.stringify(allowedNetworks)}`\n            );\n          }\n        } else {\n          setNetworkId(undefined);\n          setIsRightNetwork(false);\n        }\n      } catch (error) {\n        setIsLoading(false);\n        setNetworkId(undefined);\n        setIsRightNetwork(false);\n\n        if (error) {\n          logger.error(error);\n          setError((error as Error).message);\n        } else {\n          logger.error('Unknown error');\n        }\n      }\n    };\n\n    getNetworkId();\n  }, [provider, allowedNetworks]);\n\n  return [\n    networkId,\n    isLoading,\n    isRightNetwork,\n    error\n  ];\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useAccount');\n\nexport type UseAccountHook = [\n  account: string | undefined,\n  isLoading: boolean,\n  error: string | null\n];\n\n// useAccount react hook\nexport const useAccount = (\n  provider: Web3ModalProvider | undefined\n): UseAccountHook => {\n  const [account, setAccount] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!provider) {\n      return setAccount(undefined);\n    }\n\n    const getAccount = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const accounts = await provider.listAccounts();\n        logger.info(`listAccounts:`, accounts);\n        setAccount(accounts[0]);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n\n        if (error) {\n          logger.error(error);\n          setError((error as Error).message);\n        } else {\n          logger.error('Unknown error');\n        }\n      }\n    };\n\n    getAccount();\n  }, [provider]);\n\n  return [account, isLoading, error];\n};\n","// Common\nexport const phone = /^([+]{0,1})([0-9- ()/]+)$/;\nexport const uri = /^(https|http|wss|ws){1}:\\/\\/([\\w\\d.-]+)(:(\\d*))?(\\/[\\w\\d.-?=#&%-_]*)?$/;\nexport const uriHttp = /^(https|http){1}:\\/\\/([\\w\\d.-]+)(:(\\d*))?(\\/[\\w\\d.-?=#&%-_]*)?$/;\nexport const email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-_0-9]+\\.)+[a-zA-Z]{2,}))$/i;\nexport const isoDate = /(\\d{4})-(\\d{2})-(\\d{2})T((\\d{2}):(\\d{2}):(\\d{2}))\\.(\\d{3})([Z]*([+]\\d{2}:\\d{2})*)/;\n\n// Crypto addresses\nexport const ethereumAddress = /^0x[a-fA-F0-9]{40}$/;\nexport const bitcoinAddress = /^(bc1|[13]{1})([a-zA-HJ-NP-Z0-9]{25,39})$/;\nexport const blockchainAccountId = /^([a-zA-Z-0-9]+)@([a-zA-Z-0-9]+):([a-zA-Z-0-9]+)$/;\nexport const blockchainAccountIdGrouped = /^(?<accountId>[a-zA-Z-0-9]+)@(?<blockchainType>[a-zA-Z-0-9]+):(?<blockchainId>[a-zA-Z-0-9]+)$/;\n\n// Public keys (as strings)\nexport const X25519 = /^(MCowBQYDK2VuAyEA[a-zA-Z0-9/]{43}=)$/;\nexport const secp256k1 = /^MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAE[a-zA-Z0-9+/]{86}==$/;\n\n// Hashes\nexport const bytes32 = /^0x[a-fA-F0-9]{64}$/;\n\n// Banks accounts\nexport const swift = /^[a-zA-Z]{4}[ -]{0,1}[a-zA-Z]{2}[ -]{0,1}[a-zA-Z0-9]{2}[ -]{0,1}[XXX0-9]{0,3}$/;\nexport const iban = /^([A-Z]{2}[ -]?[0-9]{2})(?=(?:[ -]?[A-Z0-9]){9,30}$)((?:[ -]?[A-Z0-9]{3,5}){2,7})([ -]?[A-Z0-9]{1,3})?$/;\n\n// DID\nexport const did = /^did:orgid:([0-9])*(?::)?(0x[a-fA-F0-9]{64})+(?:[?])?([0-9a-zA-Z_=&%-]+)?(?:#)?([[0-9a-zA-Z-]+)?$/;\nexport const didOnly = /^did:orgid:([0-9])*(?::)?(0x[a-fA-F0-9]{64})+$/;\nexport const didGrouped = /^(?<did>did:(?<method>orgid):(?<network>[0-9]*)?(?::)?(?<id>0x[a-fA-F0-9]{64})+)(?:[?])?(?<query>[0-9a-zA-Z_=&%-]+)?(?:#)?(?<fragment>[[0-9a-zA-Z-]+)?$/;\n\n// UUID\nexport const uuid4 = /^(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)$/;\n\n// IPFS/IPNS\nexport const ipfs = /^((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48})$/;\nexport const ipfsCidV0 = /^(Qm|QM|qm|qM){1}[1-9A-Za-z]{44}$/;\nexport const ipfsCidV1Base32 = /^[bB]{1}[A-Za-z2-7]{58}$/;\nexport const ipfsCidV1Base58btc = /^[zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}$/;\nexport const ipfsUri = /^ipfs:\\/\\/(((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}))$/;\nexport const ipfsUriGrouped = /^(?<protocol>ipfs:\\/\\/)(?<cid>((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}))$/;\n","export type Status =\n  | 'OK'\n  | 'BAD_REQUEST'\n  | 'UNAUTHORIZED'\n  | 'FORBIDDEN'\n  | 'NOT_FOUND'\n  | 'METHOD_NOT_ALLOWED'\n  | 'INTERNAL_SERVER_ERROR'\n  | 'NOT_IMPLEMENTED'\n  | 'BAD_GATEWAY'\n  | 'SERVICE_UNAVAILABLE';\n\nexport type Code = 200 | 400 | 401 | 403 | 404 | 405 | 500 | 501 | 502 | 503;\n\nexport type Method =\n  | 'get' | 'GET'\n  | 'delete' | 'DELETE'\n  | 'head' | 'HEAD'\n  | 'options' | 'OPTIONS'\n  | 'post' | 'POST'\n  | 'put' | 'PUT'\n  | 'patch' | 'PATCH'\n  | 'purge' | 'PURGE'\n  | 'link' | 'LINK'\n  | 'unlink' | 'UNLINK';\n\nexport type HttpStatuses = {\n  [key in Status]: Status\n}\n\nexport type Methods = {\n  [key in Method]: Method\n}\n\nexport type HttpStatusCodes = {\n  [key in Status]: Code\n}\n\n// HTTP status\nexport const HTTP_STATUS: HttpStatuses = {\n  OK: 'OK',\n  BAD_REQUEST: 'BAD_REQUEST',\n  UNAUTHORIZED: 'UNAUTHORIZED',\n  FORBIDDEN: 'FORBIDDEN',\n  NOT_FOUND: 'NOT_FOUND',\n  METHOD_NOT_ALLOWED: 'METHOD_NOT_ALLOWED',\n  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',\n  NOT_IMPLEMENTED: 'NOT_IMPLEMENTED',\n  BAD_GATEWAY: 'BAD_GATEWAY',\n  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',\n};\n\n// HTTP status codes\nexport const HTTP_STATUS_CODES: HttpStatusCodes = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n};\n\n// HTTP methods\nexport const HTTP_METHODS: Methods = {\n  GET: 'GET',\n  get: 'GET',\n  POST: 'POST',\n  post: 'POST',\n  PUT: 'PUT',\n  put: 'PUT',\n  DELETE: 'DELETE',\n  delete: 'DELETE',\n  PATCH: 'PATCH',\n  patch: 'PATCH',\n  head: 'HEAD',\n  HEAD: 'HEAD',\n  options: 'OPTIONS',\n  OPTIONS: 'OPTIONS',\n  purge: 'PURGE',\n  PURGE: 'PURGE',\n  link: 'LINK',\n  LINK: 'LINK',\n  unlink: 'UNLINK',\n  UNLINK: 'UNLINK'\n};\n","// import CID from 'cids';\nimport type { Method } from './codes';\nimport type {\n  CancelTokenSource,\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseTransformer\n} from 'axios';\nimport axios from 'axios';\nimport { HttpError } from './errors';\nimport {\n  HTTP_STATUS,\n  HTTP_METHODS\n} from './codes';\nimport * as regexp from './regexp';\n\nexport interface ExtraHeaders {\n  [header: string]: string\n}\n\n// export const convertIpfsUri = (uri: string): string => {\n//   const parts = uri.replace('ipfs://', '').split('/');\n//   // console.log('@@@', parts);\n//   return `https://${new CID(parts[0]).toV1().toString('base32')}.ipfs.dweb.link/${parts[1]}`\n// }\n\nexport const convertIpfsUri = (uri: string): string =>\n  uri.replace('ipfs://', 'https://dweb.link/ipfs/'); // http://localhost:9090/ipfs/\n\nexport const createAuthBearerHeader = (jwt: string): ExtraHeaders => ({\n  'Authorization': `Bearer ${jwt}`\n});\n\n// Send HTTP request\nexport const request = async (\n  url: string,\n  method: Method,\n  data?: unknown,\n  extraHeaders?: ExtraHeaders,\n  timeout = 10000,\n  transformResponse?: AxiosResponseTransformer\n): Promise<unknown> => {\n\n  if (!regexp.uri.exec(url)) {\n    throw new HttpError(\n      `Request URL not matching well formed URI criteria: ${url}`,\n      'BAD_REQUEST'\n    );\n  }\n\n  if (!Object.keys(HTTP_METHODS).includes(method)) {\n    throw new HttpError(\n      `Request method not allowed: ${method}`,\n      'BAD_REQUEST'\n    );\n  }\n\n  // Configure connection timeout handler\n  const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\n  const connectionTimeout = setTimeout(\n    () => cancelTokenSource\n      .cancel(\n        `Cannot connect to the source: ${url}`\n      ),\n    timeout\n  );\n\n  try {\n    const request: AxiosRequestConfig = {\n      url,\n      method,\n      timeout,\n      headers: {\n        'Accept': 'application/json',\n        // 'Accept-Encoding': 'gzip,deflate', // Required for node.js environment only\n        'Cache-Control': 'no-cache',\n        // 'Connection': 'keep-alive',\n        ...(\n          method !== 'get'\n            ? { 'Content-Type': 'application/json' }\n            : {}\n        ),\n        ...(\n          extraHeaders\n            ? extraHeaders\n            : {}\n        )\n      },\n      data,\n      cancelToken: cancelTokenSource.token,\n      transformResponse\n    };\n\n    const response: AxiosResponse = await axios(request);\n\n    clearTimeout(connectionTimeout);\n\n    return response.data;\n  } catch (error) {\n\n    clearTimeout(connectionTimeout);\n\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n\n      // Handle errors in the response data\n      if (error.response.data && error.response.data.message) {\n        error.message = error.response.data.message;\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n    throw new HttpError(\n      error.message,\n      HTTP_STATUS.BAD_GATEWAY\n    );\n  }\n};\n","import {\n  Status,\n  Code,\n  HTTP_STATUS_CODES,\n} from './codes';\n\nexport type ErrorArgs = [string, Status?];\n\nexport interface HttpError {\n  code: Code,\n  status: Status\n}\n\n/**\n * Generate custom error with HTTP codes support\n * @example\n * new HttpError('Cannot find you in the list', 'FORBIDDEN');\n */\nexport class HttpError extends Error {\n  constructor (...args: ErrorArgs) {\n    super(args[0]);\n\n    if (args[1]) {\n      this.code = HTTP_STATUS_CODES[args[1]] || HTTP_STATUS_CODES.INTERNAL_SERVER_ERROR;\n      this.status = args[1];\n    }\n  }\n}\n","import Logger from './utils/logger';\n\n// Initialize logger\nconst logger = Logger('Config');\n\nexport interface NetworkConfig {\n  name: string;\n  chainId: number;\n  blockExplorer: string;\n}\n\nexport interface DappConfig {\n  infuraId: string;\n  defaultNetworkId: number;\n  tokenAddress: string;\n  networks: NetworkConfig[];\n  imgBase: string;\n}\n\nif (!process.env.REACT_APP_NETWORK_ID || process.env.REACT_APP_NETWORK_ID === '') {\n  logger.error('REACT_APP_NETWORK_ID must be provided in the ENV');\n  throw new Error('REACT_APP_NETWORK_ID must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_INFURA_ID || process.env.REACT_APP_INFURA_ID === '') {\n  logger.error('REACT_APP_INFURA_ID must be provided in the ENV');\n  throw new Error('REACT_APP_INFURA_ID must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_TOKEN_ADDRESS) {\n  logger.error('REACT_APP_TOKEN_ADDRESS must be provided in the ENV');\n  throw new Error('REACT_APP_TOKEN_ADDRESS must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_IMG_BASE) {\n  logger.error('REACT_APP_IMG_BASE must be provided in the ENV');\n  throw new Error('REACT_APP_IMG_BASE must be provided in the ENV');\n}\n\nconst config: DappConfig = {\n  infuraId: process.env.REACT_APP_INFURA_ID,\n  defaultNetworkId: Number(process.env.REACT_APP_NETWORK_ID),\n  tokenAddress: process.env.REACT_APP_TOKEN_ADDRESS,\n  imgBase: process.env.REACT_APP_IMG_BASE,\n  networks: [\n    // {\n    //   name: 'rinkeby',\n    //   chainId: 4,\n    //   blockExplorer: 'https://rinkeby.etherscan.io'\n    // },\n    {\n      name: 'main',\n      chainId: 1,\n      blockExplorer: 'https://etherscan.io'\n    }\n  ]\n};\n\nexport const getInfuraId = (): string => {\n  return config.infuraId;\n}\n\nexport const getNetworks = () => config.networks;\n\nexport const getNetworksIds = () => config.networks.map(n => n.chainId);\n\nexport const getNetworksNames = () => config.networks.map(n => n.name);\n\nexport const getDefaultNetwork = (): NetworkConfig => {\n  const network = config.networks\n    .filter(n => n.chainId === config.defaultNetworkId)[0];\n  if (!network) {\n    logger.error('Network not found in the configuration');\n    throw new Error('Network not found in the configuration');\n  }\n  return network;\n}\n\nexport const getTokenAddress = () => config.tokenAddress;\n\nexport const getImgBase = () => config.imgBase;\n\nexport default config;\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport type { NFTMetadata } from '../../schemas/types';\nimport { BigNumber as BN } from 'ethers';\nimport { request, convertIpfsUri } from '../utils/request';\nimport { getImgBase } from '../../config';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('getTokenById');\n\n// Returns a token information\nexport const getTokenById = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<TokenData | null> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  let owner: string;\n  let metadata: Partial<NFTMetadata>;\n\n  try {\n    owner = await contract.ownerOf(tokenId);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  // let tokenUri = await contract.tokenURI(tokenId);\n  // tokenUri = convertIpfsUri(tokenUri);\n  const name = await contract.getNickName(tokenId);\n\n  metadata = {\n    image: `ipfs://${getImgBase()}/${tokenId.toString()}.png`,\n    name\n  }\n\n  // metadata = await request(\n  //   tokenUri,\n  //   'GET',\n  //   undefined,\n  //   undefined,\n  //   100000 // 100sec timeout\n  // ) as NFTMetadata;\n  metadata.image = convertIpfsUri(metadata.image);\n\n  return {\n    id: tokenId.toNumber(),\n    image: metadata.image,\n    name: metadata.name,\n    description: metadata.description,\n    attributes: metadata.attributes,\n    owner\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport type { NFTMetadata } from '../../schemas/types';\nimport { BigNumber as BN } from 'ethers';\nimport { request, convertIpfsUri } from '../utils/request';\nimport { getImgBase } from '../../config';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('getTokenMetadataById');\n\n// Returns a token information\nexport const getTokenMetadataById = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<TokenData | null> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  let metadata: Partial<NFTMetadata>;\n\n  // const baseUri = await contract.baseURI();\n  // const tokenUri = convertIpfsUri(`${baseUri}${tokenId.toString()}`);\n  const name = await contract.getNickName(tokenId);\n\n  metadata = {\n    image: `ipfs://${getImgBase()}/${tokenId.toString()}.png`,\n    name\n  }\n\n  // metadata = await request(\n  //   tokenUri,\n  //   'GET',\n  //   undefined,\n  //   undefined,\n  //   100000 // 100sec timeout\n  // ) as NFTMetadata;\n  metadata.image = convertIpfsUri(metadata.image);\n\n  logger.debug(`Token #${tokenId.toString()} metadata`, metadata);\n\n  return {\n    id: tokenId.toNumber(),\n    image: metadata.image,\n    name: metadata.name,\n    description: metadata.description,\n    attributes: metadata.attributes\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport * as regexp  from '../utils/regexp';\nimport { getTokenById } from './getTokenById';\n\n// Returns tokens that owned by the address\nexport const getOwnedTokens = async (\n  contract: CCBaseContract,\n  ownerAddress: string\n): Promise<TokenData[] | []> => {\n\n  if (!regexp.ethereumAddress.exec(ownerAddress)) {\n    throw new Error('getOwnedTokens: Invalid owner address');\n  }\n\n  let balance: BigNumber | number  = await contract['balanceOf(address)'](ownerAddress);\n\n  if (balance.eq(0)) {\n    return [];\n  }\n\n  balance = balance.toNumber();\n\n  const tokens: TokenData[] = [];\n\n  for (let i=0; i<balance; i++) {\n    const tokenId = await contract['tokenOfOwnerByIndex(address,uint256)'](\n      ownerAddress,\n      i\n    );\n    const token = await getTokenById(contract, tokenId);\n\n    if (!token) {\n      throw new Error(`getOwnedTokens: Unable to fetch token with Id: ${tokenId}`);\n    }\n\n    tokens.push(token);\n  }\n\n  return tokens;\n};\n","import type { CryptoCossacks2022 as CryptoCossacksContract } from '@crypto-cossacks/token/typechain';\nimport type {\n  ContractReceipt,\n  Signer,\n  BigNumber,\n  CallOverrides,\n  PayableOverrides\n} from 'ethers';\nimport { BigNumber as BN, Signer as SignerObject } from 'ethers';\n\nexport type MethodOverrides = CallOverrides | PayableOverrides;\n\nexport type TxHashCallbackFn = (txHash: string) => void;\n\nexport const sendHelper = async (\n  contract: CryptoCossacksContract,\n  method: string,\n  args: unknown[],\n  sender: Signer,\n  overrides?: MethodOverrides,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  transactionHashCb?: TxHashCallbackFn,\n  confirmations = 1\n): Promise<ContractReceipt> => {\n\n  if (sender instanceof SignerObject === false) {\n    throw new Error('Invalid transaction signer');\n  }\n\n  // Assign sender as a Signer\n  const contractWithSigner = contract.connect(sender);\n\n  // Add overrides to arguments\n  if (overrides) {\n    args.push(overrides);\n  }\n\n  // Transaction gas estimation\n  const gasAmount: BigNumber = await contractWithSigner\n    .estimateGas[method](...args);\n\n  // Validate available gas\n  if (overrides && overrides.gasPrice) {\n    const balance = await sender.getBalance();\n\n    if (!BN.isBigNumber(overrides.gasPrice)) {\n      overrides.gasPrice = BN.from(overrides.gasPrice);\n    }\n\n    if (overrides.gasPrice.mul(gasAmount).gt(balance)) {\n      throw new Error('Insufficient gas or always failing transaction');\n    }\n  }\n\n  // Send transaction\n  const tx = await contractWithSigner[method](...args);\n\n  if (typeof transactionHashCb === 'function') {\n    transactionHashCb(tx.hash);\n  }\n\n  // Wait for specified number of tx confirmations\n  return await tx.wait(confirmations);\n}\n","import type { providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { MethodOverrides, TxHashCallbackFn } from '../utils/sendHelper';\nimport type { TokenData } from '../types';\nimport { getTokenById } from './getTokenById'\nimport { sendHelper } from '../utils/sendHelper';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('mintToken');\n\n// Mint a token\nexport const mintToken = async (\n  contract: CCBaseContract,\n  tokenId: number | string,\n  overrides: MethodOverrides,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  transactionHashCb: TxHashCallbackFn,\n  confirmations = 1\n): Promise<TokenData> => {\n\n  if (await getTokenById(contract, tokenId)) {\n    throw new Error(`Token #${tokenId} is already minted`);\n  }\n\n  overrides = overrides ? overrides : {};\n  logger.debug('Overrides:', overrides);\n\n  const owner = (contract.provider as providers.Web3Provider).getSigner();\n\n  await sendHelper(\n    contract,\n    'mint(uint256)',\n    [\n      tokenId\n    ],\n    owner,\n    overrides,\n    transactionHashCb,\n    confirmations\n  );\n\n  return getTokenById(contract, tokenId);\n};\n","import type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\nexport const isPaused = async (\n  contract: CCBaseContract\n): Promise<boolean> => contract.isPaused();\n","import type { BigNumber, providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport { BigNumber as BN } from 'ethers';\n\n// Estimate token minting\nexport const estimateMinting = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<BigNumber> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  const value = await contract.getPrice();\n  const sender = (contract.provider as providers.Web3Provider).getSigner();\n  const contractWithSigner = contract.connect(sender);\n\n  return contractWithSigner\n    .estimateGas.mint(\n      tokenId,\n      {\n        value,\n      }\n    );\n};\n","import type { providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\nexport const isFounder = async (\n  contract: CCBaseContract\n): Promise<boolean> => {\n\n  const signer = (contract.provider as providers.Web3Provider).getSigner();\n  const address = await signer.getAddress();\n\n  return contract.isFounder(address);\n};\n","import type { BigNumber, providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { MethodOverrides, TxHashCallbackFn } from './utils/sendHelper';\nimport type { TokenData } from './types';\nimport { ethers } from 'ethers';\nimport {\n  CryptoCossacks as CCossacksContract\n} from '@crypto-cossacks/token';\nimport * as regexp  from './utils/regexp';\n\n// Token methods:\n// getTokens(cursor: number, count: number, includeMinted: boolean): Promise<TokenData[]>\n\nimport { getTokenById } from './api/getTokenById';\nimport { getTokenMetadataById } from './api/getTokenMetadataById';\nimport { getOwnedTokens } from './api/getOwnedTokens';\nimport { isTokenMintable } from './api/isTokenMintable';\nimport { mintToken } from './api/mintToken';\nimport { isPaused } from './api/isPaused';\nimport { getPrice } from './api/getPrice';\nimport { estimateMinting } from './api/estimateMinting';\nimport { isFounder } from './api/isFounder';\nimport { getNickName } from './api/getNickName';\n\nexport type KnownProvider =\n  | providers.ExternalProvider\n  | providers.JsonRpcProvider\n  | providers.Web3Provider\n  | providers.Provider\n  | string;\n\nexport class CCContract {\n  readonly address: string;\n  readonly provider: providers.Provider;\n  readonly contract: CCBaseContract;\n\n  constructor(\n    contractAddress: string,\n    providerOrUri: KnownProvider\n  ) {\n\n    if (regexp.ethereumAddress.exec(contractAddress)) {\n      this.address = contractAddress;\n    } else {\n      throw new Error(\n        `cryptoCossacksContract: Invalid smart contract address: ${contractAddress}`\n      );\n    }\n\n    if (typeof providerOrUri === 'string' && providerOrUri !== '') {\n      this.provider = new ethers.providers.JsonRpcProvider(providerOrUri);\n    } else if (typeof providerOrUri === 'object') {\n\n      if ((providerOrUri as providers.ExternalProvider).isMetaMask) {\n        // using window.ethereum provided as providerOrUri\n        this.provider = new ethers.providers.Web3Provider(\n          providerOrUri as providers.ExternalProvider\n        );\n      } else if (typeof (providerOrUri as providers.JsonRpcProvider).send === 'function') {\n        // using raw provider\n        this.provider = providerOrUri as providers.JsonRpcProvider;\n      }\n    }\n\n    if (!this.provider) {\n      throw new Error(\n        `cryptoCossacksContract: Unable to initialize provider': ${providerOrUri}`\n      );\n    }\n\n    this.contract = new ethers.Contract(\n      this.address,\n      CCossacksContract.abi,\n      this.provider\n    ) as CCBaseContract;\n  }\n\n  // Returns a token information\n  getTokenById(\n    tokenId: number | string | BigNumber\n  ): Promise<TokenData | null> {\n    return getTokenById(this.contract, tokenId);\n  }\n\n  // Returns a token information (not minted token)\n  getTokenMetadataById(\n    tokenId: number | string | BigNumber\n  ): Promise<TokenData | null> {\n    return getTokenMetadataById(this.contract, tokenId);\n  }\n\n  // Check is token mintable\n  isTokenMintable(\n    tokenId: number | string | BigNumber\n  ): Promise<boolean> {\n    return isTokenMintable(this.contract, tokenId);\n  }\n\n  // Return all the tokens that owned by an address\n  getOwnedTokens(\n    ownerAddress: string\n  ): Promise<TokenData[] | []> {\n    return getOwnedTokens(this.contract, ownerAddress);\n  }\n\n  // Mint token\n  mintToken(\n    tokenId: number | string,\n    overrides: MethodOverrides,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    transactionHashCb: TxHashCallbackFn,\n    confirmations: number\n  ): Promise<TokenData> {\n    return mintToken(this.contract, tokenId, overrides, transactionHashCb, confirmations);\n  }\n\n  // Check is contract is paused\n  isPaused(): Promise<boolean> {\n    return isPaused(this.contract);\n  }\n\n  // Get configured token price\n  getPrice(): Promise<BigNumber> {\n    return getPrice(this.contract);\n  }\n\n  // Estimate minting\n  estimateMinting(\n    tokenId: number | string\n  ): Promise<BigNumber> {\n    return estimateMinting(this.contract, tokenId);\n  }\n\n  // Check is current account is the founder\n  isFounder(): Promise<boolean> {\n    return isFounder(this.contract);\n  }\n\n  getNickName(tokenId: number | string): Promise<string> {\n    return getNickName(this.contract, tokenId);\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport { BigNumber as BN } from 'ethers';\n\n// Check is token mintable\nexport const isTokenMintable = (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<boolean> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  return contract.isTokenMintable(tokenId);\n};\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\n// Check is token mintable\nexport const getPrice = (\n  contract: CCBaseContract\n): Promise<BigNumber> => contract.getPrice();\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\n// Get cossack name\nexport const getNickName = (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<string> => contract.getNickName(tokenId);\n","import type { ReactNode } from 'react';\nimport type { Web3ModalConfig } from '../hooks/useWeb3Modal';\nimport { createContext, useContext, useEffect } from 'react';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport Logger from '../utils/logger';\nimport { useAppReducer } from './reducer';\n\n// Custom hooks\nimport { useWeb3Modal } from '../hooks/useWeb3Modal';\nimport { useNetworkId } from '../hooks/useNetworkId';\nimport { useAccount } from '../hooks/useAccount';\nimport { useToken } from '../hooks/useToken';\nimport { useIsPaused } from '../hooks/useIsPaused';\n\n// Config\nimport {\n  getDefaultNetwork,\n  getNetworksIds,\n  getInfuraId,\n  getTokenAddress\n} from '../config';\n\n// Initialize logger\nconst logger = Logger('Store');\n\nexport type AppReducerType = ReturnType<typeof useAppReducer>;\nexport type State = AppReducerType[0];\nexport type Dispatch = AppReducerType[1];\n\nexport const StateContext = createContext<State | null>(null);\nexport const DispatchContext = createContext<Dispatch | null>(null);\n\nexport interface PropsType {\n  children: ReactNode;\n}\n\nexport const useAppState = () => {\n  const ctx = useContext(StateContext);\n\n  if (!ctx) {\n    logger.error('Missing state context');\n    throw new Error('Missing state context');\n  }\n\n  return ctx;\n};\n\nexport const useAppDispatch = () => {\n  const ctx = useContext(DispatchContext);\n\n  if (!ctx) {\n    logger.error('Missing dispatch context');\n    throw new Error('Missing dispatch context');\n  }\n\n  return ctx;\n}\n\nconst defaultNetwork = getDefaultNetwork();\nconst allowedNetworksIds = getNetworksIds();\nconst tokenAddress = getTokenAddress();\n\n// Web3Modal initialization\nconst web3ModalConfig: Web3ModalConfig = {\n  network: defaultNetwork.name,\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId: getInfuraId()\n      }\n    }\n  }\n};\n\nexport const AppStateProvider = ({ children }: PropsType) => {\n  const [state, dispatch] = useAppReducer();\n  const [\n    provider,\n    injectedProvider,\n    isConnecting,\n    signIn,\n    signOut,\n    web3ModalError\n  ] = useWeb3Modal(web3ModalConfig);\n  const [\n    networkId,\n    isNetworkIdLoading,\n    isRightNetwork,\n    networkError\n  ] = useNetworkId(provider, allowedNetworksIds);\n  const [account, isAccountLoading, accountError] = useAccount(provider);\n  const [token, tokenError] = useToken(provider, tokenAddress);\n  const [isPaused, isPausedError] = useIsPaused(token);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_IS_ENABLED',\n      payload: !!provider && isRightNetwork && !!account && !!token\n    });\n  }, [dispatch, provider, isRightNetwork, account, token]);\n\n  useEffect(() => {\n    if (web3ModalError) {\n\n    }\n    if (networkError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: networkError\n      });\n    }\n    if (accountError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: accountError\n      });\n    }\n    if (tokenError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: tokenError\n      });\n    }\n    if (isPausedError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: isPausedError\n      });\n    }\n  }, [dispatch, web3ModalError, networkError, accountError, tokenError, isPausedError]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_CONNECTING',\n      payload: isConnecting || isNetworkIdLoading || isAccountLoading\n    })\n  }, [dispatch, isConnecting, isNetworkIdLoading, isAccountLoading]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_ACCOUNT',\n      payload: account\n    })\n  }, [dispatch, account]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_IS_RIGHT_NETWORK',\n      payload: isRightNetwork\n    })\n  }, [dispatch, isRightNetwork]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_NETWORK_ID',\n      payload: networkId\n    })\n  }, [dispatch, networkId]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_PROVIDER',\n      payload: provider\n    })\n  }, [dispatch, provider]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_INJECTED_PROVIDER',\n      payload: injectedProvider\n    })\n  }, [dispatch, injectedProvider]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_WEB3MODAL_FUNCTIONS',\n      payload: {\n        signIn,\n        signOut\n      }\n    })\n  }, [dispatch, signIn, signOut]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_TOKEN',\n      payload: token\n    })\n  }, [dispatch, token]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_MINTING_PAUSED',\n      payload: isPaused\n    })\n  }, [dispatch, isPaused]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        {children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport { CCContract } from '../contractLib';\n\nexport type UseTokenHook = [\n  token: CCContract,\n  error: string | null\n];\n\nexport const useToken = (\n  provider: Web3ModalProvider | undefined,\n  contractAddress: string\n): UseTokenHook => {\n  const [token, setToken] = useState<CCContract | undefined>();\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!provider) {\n      return setToken(undefined);\n    }\n\n    try {\n      setError(null);\n      setToken(new CCContract(contractAddress, provider));\n    } catch (err) {\n\n      if (!err.message) {\n        setError('Unknown error');\n      }\n\n      setError(err.message)\n    }\n\n  }, [contractAddress, provider]);\n\n  return [token, error];\n};\n","import type { CCContract } from '../contractLib';\nimport { useState, useEffect } from 'react';\n\nexport type UseIsPausedHook = [\n  isPaused: boolean,\n  error: string | undefined\n];\n\nexport const useIsPaused = (token: CCContract): UseIsPausedHook => {\n  const [isPaused, setIsPaused] = useState<boolean>(false);\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    const resetState = () => {\n      setError(undefined);\n      setIsPaused(false);\n    };\n\n    const checkIsPaused = async () => {\n      try {\n        if (token) {\n          const paused = await token.isPaused();\n          setIsPaused(paused);\n        } else {\n          resetState();\n        }\n      } catch (error) {\n        setError(error.message || 'Unknown error');\n        resetState();\n      }\n    };\n\n    checkIsPaused();\n  }, [token]);\n\n  return [isPaused, error];\n};\n","import type { MouseEventHandler } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface IconButtonWrapperProps {\n  size: string;\n  color?: string;\n  backgroundColor?: string;\n}\n\nexport interface RefreshButtonProps {\n  refresh: MouseEventHandler;\n  refreshing: boolean;\n}\n\nexport interface MintButtonProps {\n  label: string;\n  loading: boolean;\n  disabled: boolean;\n  large?: boolean;\n  onClick(): void;\n}\n\nexport interface IconButtonProps {\n  size: string;\n  icon: string;\n  spin: boolean;\n  color?: string,\n  backgroundColor?: string;\n  disabled?: boolean;\n  onClick(): void;\n}\n\nexport interface ButtonLabelProps {\n  mr: boolean;\n}\n\nexport interface GreenButtonProps {\n  large?: boolean;\n}\n\nexport const Button = styled.button`\n  padding: 0;\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.dark});\n  cursor: pointer;\n`;\n\nexport const RedButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 24px;\n  border-radius: 8px;\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  cursor: pointer;\n  font-family: ${fonts.family.Ukraine};\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.bold};\n\n  @media (max-width: ${responsive.md}) {\n    padding: 6px 10px;\n    font-size: ${fonts.size.small};\n    font-weight: ${fonts.weight.medium};\n  }\n`;\n\nexport const ConnectButton = styled(RedButton)`\n  /* margin: 40% auto auto auto; */\n`;\n\nexport const GreenButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 12px 24px;\n\n  ${({ large }: GreenButtonProps) => large ? 'padding: 24px 48px;' : '' }\n\n  margin-top: 20px;\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  border-radius: 8px;\n  cursor: pointer;\n\n  @media (max-width: ${responsive.md}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ButtonLabelWrapper = styled.div.attrs(\n  (props: ButtonLabelProps) => ({\n    mr: props.mr,\n  })\n)`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  margin-right: ${({ mr }) => mr ? '8px' : '0'};\n`;\n\nexport const IconButtonWrapper = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  color: rgb(${colors.red});\n  background-color: rgb(${colors.white});\n  padding: 5.1px;\n  border: 1px solid rgb(${colors.red});\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  margin-left: 8px;\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    &:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nexport const ControlButton = ({ icon, size, disabled, onClick }) => (\n  <IconButtonWrapper disabled={disabled} onClick={onClick}>\n    <div>\n      <FontAwesomeIcon icon={icon} size={size} />\n    </div>\n  </IconButtonWrapper>\n);\n\nexport const ControlButtonWrapper = styled.div`\n  padding: 4px;\n  margin-right: 4px;\n  color: rgb(${colors.red});\n`;\n\nexport const RefreshButtonWrapper = styled(RedButton)`\n  background-color: none;\n`;\n\nexport const RefreshButton = ({ refresh, refreshing }: RefreshButtonProps) => (\n  <FontAwesomeIcon\n    onClick={refresh}\n    icon='sync-alt'\n    size='2x'\n    spin={refreshing}\n    color='white'\n  />\n);\n\nexport const MintButton = ({ label, loading, onClick, ...props }: MintButtonProps) => (\n  <GreenButton onClick={onClick} {...props}>\n    <ButtonLabelWrapper mr={loading}>\n      {label}\n    </ButtonLabelWrapper>\n    {loading &&\n      <div>\n        <FontAwesomeIcon icon='sync-alt' spin={loading} />\n      </div>\n    }\n  </GreenButton>\n);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { useAppState } from '../../store';\nimport { ConnectButton } from './index';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport const SignOutButtonWrapper = styled.button`\n  font-size: ${fonts.size.h5};\n  color: rgb(${colors.white});\n  border: none;\n  background-color: rgb(${colors.blueblack});\n  margin-left: 12px;\n\n  @media (max-width: ${responsive.md}) {\n    margin-left: 0;\n  }\n`;\n\nexport const LabelDesc = styled.span`\n  @media (max-width: ${responsive.md}) {\n    display: none;\n  }\n`;\n\nexport const LabelMob = styled.span`\n  display: none;\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n  }\n`;\n\nexport const SignInButton = () => {\n  const { isConnecting, account, signIn } = useAppState();\n\n  if (isConnecting || account) {\n    return null;\n  }\n\n  return (\n    <ConnectButton\n      onClick={() => signIn()}\n      disabled={isConnecting}\n    >\n      <LabelDesc>\n        Connect wallet\n      </LabelDesc>\n      <LabelMob>\n        Connect\n      </LabelMob>\n    </ConnectButton>\n  )\n};\n\nexport const SignOutButton = () => {\n  const { isConnecting, account, signOut } = useAppState();\n\n  if (!account && !isConnecting) {\n    return null;\n  }\n\n  return (\n    <SignOutButtonWrapper\n      onClick={() => signOut()}\n      disabled={isConnecting}\n    >\n      {\n        isConnecting\n          ? <FontAwesomeIcon icon='sync-alt' spin />\n          : <FontAwesomeIcon icon='sign-out-alt' />\n      }\n    </SignOutButtonWrapper>\n  )\n};\n","// Makes shorter text with ellipsis in the center\nexport const centerEllipsis = (text: string, width = 4): string =>\n  text\n    ? text.length > ((width * 2) + 3)\n      ? `${text.substring(0, width + 2)}...${text.substring(-width, width)}`\n      : text\n    : '';\n\n// Copies text to clipboard\nexport const copyToClipboard = (text: string): Promise<void> =>\n  navigator\n    .clipboard\n    .writeText(text)\n    .then(resolve => resolve);\n","import Blockies from 'react-blockies';\nimport styled from 'styled-components';\nimport { centerEllipsis, copyToClipboard } from '../utils/strings';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface AccountProps {\n  account?: string;\n}\n\nconst AccountWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AccountIconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AccountIcon = styled(Blockies)`\n  border: 2px solid rgb(${colors.white});\n  border-radius: 50%;\n`;\n\nconst AccountHash = styled.div`\n  margin-left: 6px;\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n  cursor: pointer;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.tiny};\n  }\n`;\n\nexport const Account = ({ account }: AccountProps) => {\n\n  if (!account) {\n    return null;\n  }\n\n  return (\n    <AccountWrapper>\n      <AccountIconWrapper>\n        <AccountIcon\n          seed={account}\n          size={7}\n          scale={3}\n        />\n      </AccountIconWrapper>\n      <AccountHash\n        onClick={() => copyToClipboard(account)}\n      >\n        {centerEllipsis(account)}\n      </AccountHash>\n    </AccountWrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('usePoller');\n\nexport type PollerContextFunction = () => void | Promise<void>;\n\n// usePoller react hook\nexport const usePoller = (\n  fn: PollerContextFunction,\n  enabled = true,\n  interval = 5000,\n  pollerName?: string\n) => {\n  if (typeof fn !== 'function') {\n    throw new TypeError('Can\\'t poll without a callback function');\n  }\n\n  return useEffect(\n    () => {\n      let disabled = false;\n      let failures = 0;\n\n      const poll = async () => {\n        if (disabled) {\n          return;\n        }\n\n        try {\n          await fn();\n        } catch (error) {\n          failures++;\n          logger.error(error);\n        }\n\n        if (failures < 100) {\n          setTimeout(poll, interval);\n        } else {\n          logger.debug(`Too much errors in poller ${pollerName}. Disabled`);\n        }\n      }\n\n      poll();\n      logger.debug(`Poller ${pollerName} started`);\n\n      return () => {\n        disabled = true;\n        failures = 0;\n        logger.debug(`Poller ${pollerName} stopped`);\n      };\n    },\n    [fn, enabled, interval, pollerName]\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n","import type { TokenData } from '../../contractLib/types';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface TokenCardProps {\n  token: TokenData;\n  onClick?(): void;\n}\n\nexport interface TokenImageProps {\n  src: string;\n  width?: string;\n  height?: string;\n}\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 0 20px 0;\n`;\n\nexport const ImageWrapperInner = styled.div`\n  border: 1px solid rgb(145, 145, 145);\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TokenCardWrapper = styled.div`\n  display: inline-block;\n  padding: 4px;\n  background-color: rgb(${colors.white});\n  margin-right: 17px;\n  margin-bottom: 20px;\n  vertical-align: middle;\n  border-radius: 8px;\n\n  ${({ onClick }) =>\n    onClick !== undefined\n      ? 'cursor: pointer;'\n      : ''\n  }\n\n  /* &:nth-child(6n) {\n    margin-right: 0;\n  } */\n\n  @media (max-width: ${responsive.md}) {\n    &:nth-child(2n) {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const TokenId = styled.div`\n  font-size: ${fonts.size.tiny};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.black});\n  margin-bottom: 4px;\n`;\n\nexport const TokenImage = styled.div`\n  width: ${({ width }) => !!width ? width : '139px'};\n  height: ${({ height }) => !!height ? height : '139px'};\n  position: relative;\n\n  &:before {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-image: url(${({ src }: TokenImageProps) => src});\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    content: \"\";\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  &:after {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: rgb(${colors.lightgrey});\n    font-size: ${fonts.size.tiny};\n    content: \"Loading from IPFS...\";\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    width: ${({ width }) => !!width ? width : 'calc(50vw - 40px)'};\n    height: ${({ height }) => !!height ? height : 'calc(50vw - 40px)'};\n  }\n`;\n\nexport const TokenCard = ({ token, ...props }: TokenCardProps) => (\n  <TokenCardWrapper {...props}>\n    <TokenId>#{token.id}</TokenId>\n    <TokenImage src={token.image} />\n  </TokenCardWrapper>\n);\n\nexport const TokenMintCard = ({ token }: TokenCardProps) => (\n  <ImageWrapper>\n    <ImageWrapperInner>\n      <TokenImage src={token.image} width='250px' height='250px' />\n    </ImageWrapperInner>\n  </ImageWrapper>\n);\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface BlockTitleProps {\n  center?: boolean;\n}\n\nexport const BlockTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n  margin-bottom: 10px;\n  text-transform: uppercase;\n\n  ${({ center }: BlockTitleProps) => center ? 'align-self: center;' : ''}\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.small};\n  }\n`;\n","import React, { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface PortalProps {\n  children: React.ReactNode;\n  onClose: Function;\n}\n\nexport interface ModalProps {\n  title?: string;\n  children: React.ReactNode;\n  show: boolean;\n  onClose: Function;\n}\n\nconst Portal = ({\n  children,\n  onClose = () => {}\n}: PortalProps) => {\n  const closeOnEscapeKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      onClose();\n    }\n  }, [onClose]);\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', closeOnEscapeKeyDown);\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEscapeKeyDown);\n    };\n  }, [closeOnEscapeKeyDown]);\n\n  return createPortal(children, document.getElementById('root'));\n};\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: rgb(${colors.dark});\n  z-index: 99999;\n`;\n\nconst ModalContent = styled.div`\n  width: 500px;\n  background-color: rgb(${colors.blueblack});\n\n  @media (max-width: ${responsive.md}) {\n    width: 99%;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  padding: 10px;\n`;\n\nconst ModalTitle = styled.div`\n  margin: 0;\n`;\n\nconst ModalBody = styled.div`\n  padding: 10px;\n  border: 1px solid rgb(${colors.lightgrey});\n  color: rgb(${colors.white});\n`;\n\nconst ModalFooter = styled.div`\n  padding: 10px;\n`;\n\nconst CloseBtn = styled.button`\n  padding: 12px 18px;\n  /* border: 1px solid rgb(${colors.red}); */\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  cursor: pointer;\n  font-family: ${fonts.family.Ukraine};\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.medium};\n  border-radius: 6px;\n`;\n\nexport const Modal = ({\n  title,\n  children,\n  show = false,\n  onClose = () => {}\n}: ModalProps) => {\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <Portal onClose={onClose}>\n      <ModalWrapper onClick={() => onClose()}>\n        <ModalContent onClick={e => e.stopPropagation()}>\n          {title &&\n            <ModalHeader>\n              <ModalTitle>{title}</ModalTitle>\n            </ModalHeader>\n          }\n          <ModalBody>\n            {children}\n          </ModalBody>\n          <ModalFooter>\n            <CloseBtn onClick={() => onClose()}>\n              Close\n            </CloseBtn>\n          </ModalFooter>\n        </ModalContent>\n      </ModalWrapper>\n    </Portal>\n  );\n};\n","import type { CCContract } from '../../contractLib';\nimport type { TokenData } from '../../contractLib/types';\nimport styled from 'styled-components';\nimport { useState, useCallback, useEffect } from 'react';\nimport { usePoller } from '../../hooks/usePoller';\nimport { useError } from '../../hooks/useError';\nimport { Container } from '../Layout/Container';\nimport { TokenCard } from '../Layout/TokenCard';\nimport { BlockTitle } from '../Typography/BlockTitle';\nimport { RefreshButton } from '../buttons';\nimport { Modal } from '../Modal';\nimport { responsive } from '../../styles';\nimport Logger from '../../utils/logger';\nimport { useAppDispatch } from '../../store';\nimport { colors } from '../../styles';\n\n// Initialize logger\nconst logger = Logger('MyTokens');\n\nexport interface MyTokensProps {\n  token: CCContract,\n  account?: string,\n  pollInterval?: number\n}\n\nexport interface TokenImageProps {\n  src: string;\n  width?: string;\n  height?: string;\n}\n\nexport interface TokensData {\n  [account: string]: TokenData[]\n}\n\nexport const TokenCardsWrapper = styled.div`\n  display: block;\n`;\n\nexport const RefreshBtnWrapper = styled.div`\n  display: inline-block;\n  margin-bottom: 20px;\n  vertical-align: middle;\n  cursor: pointer;\n\n  /* @media (max-width: ${responsive.md}) {\n    width: 100%;\n    margin: 0;\n    text-align: center;\n  } */\n`;\n\nconst RefreshBtnInner = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 145px;\n  height: 167px;\n  background-color: rgb(${colors.grey});\n  border-radius: 8px;\n`;\n\nexport const TokenClickArea = styled.div`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const TokenImage = styled.div`\n  width: 480px;\n  height: 480px;\n  background-image: url(${({ src }: TokenImageProps) => src});\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (max-width: ${responsive.md}) {\n    width: 100%;\n    height: 400px;\n  }\n`;\n\nexport const MyTokens = (\n  {\n    token,\n    account,\n    pollInterval = 10000\n  }: MyTokensProps\n) => {\n  const setError = useError();\n  const dispatch = useAppDispatch();\n  const [refreshing, setRefreshing] = useState<boolean>(false);\n  const [ownedTokens, setOwnedTokens] = useState<TokensData>({});\n  const [details, setDetails] = useState<TokenData | undefined>();\n\n  const getOwnedTokens = useCallback(\n    async () => {\n      try {\n        setRefreshing(true);\n        const newOwnedTokens = await token.getOwnedTokens(account);\n        logger.debug('Owned tokens', account, newOwnedTokens);\n        setOwnedTokens(ownedTokensState => ({\n          ...ownedTokensState,\n          [account]: newOwnedTokens\n        }));\n        dispatch({\n          type: 'SET_IS_OWN_TOKENS',\n          payload: newOwnedTokens && newOwnedTokens.length > 0\n        });\n        setRefreshing(false);\n      } catch (err) {\n        setRefreshing(false);\n        setError(err.message || 'Unknown error');\n      }\n    },\n    [token, account, setError, dispatch]\n  );\n\n  useEffect(\n    () => {\n      setOwnedTokens({});\n    },\n    [token, account]\n  );\n\n  usePoller(\n    getOwnedTokens,\n    account !== undefined,\n    pollInterval,\n    `getOwnedTokens for account: ${account}`\n  );\n\n  if (!token || ownedTokens[account] === undefined || ownedTokens[account].length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <BlockTitle>\n        My own tokens\n      </BlockTitle>\n      <TokenCardsWrapper>\n        {ownedTokens[account].map(\n          (t: TokenData, i: number) => (\n            <TokenCard\n              key={i}\n              token={t}\n              onClick={() => setDetails(t)}\n            />\n          )\n        )}\n        <RefreshBtnWrapper>\n          <RefreshBtnInner onClick={getOwnedTokens}>\n            <RefreshButton\n              refresh={getOwnedTokens}\n              refreshing={refreshing}\n            />\n          </RefreshBtnInner>\n        </RefreshBtnWrapper>\n      </TokenCardsWrapper>\n      <Modal\n        show={details !== undefined}\n        onClose={() => setDetails(undefined)}\n      >\n        {details !== undefined &&\n          <>\n            <div>\n              #{details.id} {details.name}\n            </div>\n            <TokenImage src={details.image} />\n          </>\n        }\n      </Modal>\n    </Container>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAppDispatch } from '../store';\n\nexport type UseErrorCallback = (error: string) => void;\n\nexport const useError = (): UseErrorCallback => {\n  const dispatch = useAppDispatch();\n  return useMemo(() => (error: string): void => dispatch({\n    type: 'ERROR_ADD',\n    payload: error\n  }), [dispatch]);\n};\n","import { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useAppState } from '../store';\nimport { useTokenRange } from '../hooks/useTokenRange';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface CheckedWrapper {\n  selected?: boolean;\n}\n\nexport interface CheckedToken {\n  tokenId: number;\n  selected?: boolean;\n  paused?: boolean;\n  available: boolean;\n  founder?: boolean;\n}\n\nexport interface AvailChipProps {\n  token: CheckedToken;\n  selected?: boolean;\n  isFounder?: boolean;\n  onClick?: () => void\n}\n\nexport const ChipWrapper = styled.div<CheckedWrapper>`\n  display: inline-block;\n  margin-right: 10px;\n  padding: 10px;\n  background-color: #363636;\n  border-radius: 10px;\n\n  ${\n    ({ selected }: CheckedWrapper) => selected\n      ? `\n        border: solid 1px rgb(${colors.white});\n      `\n      : ''\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  margin-left: 8px;\n`;\n\nexport const Chip = styled.div<CheckedToken>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n\n  ${\n    ({ available, paused, founder }: CheckedToken) => available && (!paused || (paused && founder))\n      ? `\n        color: rgb(${colors.white});\n        text-decoration: underline;\n        cursor: pointer;\n      `\n      : `\n        color: rgb(${colors.red});\n        text-decoration: none;\n      `\n  }\n\n  ${\n    ({ selected }: CheckedToken) => selected\n      ? `\n        font-weight: ${fonts.weight.bold};\n        text-decoration: none;\n        cursor: not-allowed;\n      `\n      : ''\n  }\n`;\n\nexport const AvailChip = ({\n  token,\n  selected,\n  isFounder,\n  onClick = () => {}\n}: AvailChipProps) => {\n  const {\n    isMintingPaused\n  } = useAppState();\n\n  return (\n    <ChipWrapper selected={selected}>\n      <Chip\n        {...token}\n        selected={selected}\n        paused={isMintingPaused}\n        founder={isFounder}\n        title={\n          token.available\n            ? isMintingPaused && !isFounder\n              ? 'public minting not opened yet'\n              : 'available for minting'\n            : 'not available'\n        }\n        onClick={\n          onClick\n          // isMintingPaused && (token.available || selected)\n          //   ? onClick\n          //   : () => {}\n        }\n      >\n        <div>\n          {token.tokenId}\n        </div>\n        {(!token.available || (isMintingPaused && !isFounder)) &&\n          <IconWrapper>\n            <FontAwesomeIcon icon='ban' />\n          </IconWrapper>\n        }\n      </Chip>\n    </ChipWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../styles';\n\nexport const ErrorMessageWrapper = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.red});\n  margin: 20px 0 20px 0;\n  padding: 10px;\n  background-color: rgb(${colors.light});\n  border-radius: 8px;\n`;\n\nexport const ErrorMessage = ({ message }) => {\n\n  if (!message || message === '') {\n    return null;\n  }\n\n  return (\n    <ErrorMessageWrapper>\n      {message}\n    </ErrorMessageWrapper>\n  );\n}\n","import type { BigNumber } from 'ethers';\nimport type { CCContract } from '../../contractLib';\nimport type { TokenData } from '../../contractLib/types';\nimport type { Web3ModalProvider } from '../../hooks/useWeb3Modal';\nimport { useState, useCallback, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled, { keyframes } from 'styled-components';\nimport { utils as ethersUtils } from 'ethers';\nimport { useError } from '../../hooks/useError';\nimport { useTokenRange } from '../../hooks/useTokenRange';\nimport { Container } from '../Layout/Container';\nimport { TokenMintCard } from '../Layout/TokenCard';\nimport { BlockTitle } from '../Typography/BlockTitle';\nimport { ControlButton, MintButton } from '../buttons';\nimport { ErrorMessage } from '../ErrorMessage';\nimport { colors, fonts, responsive } from '../../styles';\nimport { GasPriceSelector } from '../../components/GasPriceSelector';\nimport { centerEllipsis } from '../../utils/strings';\nimport { getDefaultNetwork } from '../../config';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('MintCard');\n\n// Config\nconst defaultNetwork = getDefaultNetwork();\n\nexport interface MintCardProps {\n  token: CCContract;\n  provider: Web3ModalProvider;\n  tokenId: number;\n  tokenPrice: BigNumber;\n}\n\nexport interface TitleProps {\n  large?: boolean;\n}\n\nexport const CheckerBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  /* padding: 16px; */\n  /* background-color: rgb(${colors.white}); */\n  margin-top: 40px;\n  width: 100%;\n  max-width: 570px;\n`;\n\nexport const TokenCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${responsive.md}) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const PriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  align-self: flex-start;\n`;\n\nexport const PriceTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.lightgrey});\n  margin-right: 4px;\n  margin-bottom: 4px;\n  align-self: flex-start;\n\n  ${({ large }: TitleProps) => large ? `font-size: ${fonts.size.large};` : ''}\n`;\n\nexport const PriceValue = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n`;\n\nexport const MinButtonWrapper = styled.div`\n  @media (max-width: ${responsive.md}) {\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n  }\n`;\n\nexport const TxBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n`;\n\nexport const TxTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.lightgrey});\n  margin-bottom: 4px;\n`;\n\nexport const TxHashValue = styled.a`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.white});\n  text-decoration: underline;\n`;\n\nexport const fetchTokenMeta = async (\n  token: CCContract,\n  tokenId: number\n) => {\n  const isAvailable = await token.isTokenMintable(tokenId);\n\n  if (!isAvailable) {\n    throw new Error(`Token #${tokenId} is not available for minting`);\n  }\n\n  const metadata = await token.getTokenMetadataById(tokenId);\n  // const estimation = await token.estimateMinting(tokenId);\n  return { metadata };// , estimation\n};\n\nexport const MintCard = ({ token, provider, tokenId, tokenPrice }: MintCardProps) => {\n  const [tokenMetadata, setTokenMetadata] = useState<TokenData | undefined>();\n  // const [gasEstimation, setGasEstimation] = useState<BigNumber | undefined>();\n  const [metadataLoading, setMetadataLoading] = useState<boolean>(false);\n  const [minting, setMinting] = useState<boolean>(false);\n  // const [gasPrice, setGasPrice] = useState<BigNumber | undefined>();\n  // const [totalPrice, setTotalPrice] = useState<BigNumber | undefined>();\n  const [txHash, setTxHash] = useState<string | undefined>();\n  const [isMinted, setMinted] = useState<boolean>(false);\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    setMetadataLoading(true);\n    setTokenMetadata(undefined);\n    setMinted(false);\n    setTxHash(undefined);\n    setError(undefined);\n\n    fetchTokenMeta(token, tokenId)\n      .then(res => {\n        // setGasEstimation(res.estimation);\n        setTokenMetadata(res.metadata);\n      })\n      .catch(err => setError(\n        (err as Error).message || 'Unknown token metadata loader error'\n      ))\n      .finally(() => setMetadataLoading(false));\n  }, [token, tokenId]);\n\n  // useEffect(() => {\n  //   if (\n  //     tokenPrice !== undefined &&\n  //     gasPrice !== undefined &&\n  //     gasEstimation !== undefined\n  //   ) {\n  //     setTotalPrice(gasEstimation.mul(gasPrice).add(tokenPrice));\n  //   }\n  // }, [tokenPrice, gasPrice, gasEstimation]);\n\n  const mint = useCallback(async () => {\n    if (\n      tokenId !== undefined &&\n      tokenPrice !== undefined //&&\n      // gasPrice !== undefined\n    ) {\n      try {\n        setTxHash(undefined);\n        setMinting(true);\n        setMinted(false);\n        setError(undefined);\n        await token.mintToken(\n          tokenId,\n          {\n            value: tokenPrice,\n            // gasPrice\n          },\n          txHash => setTxHash(txHash),\n          1\n        );\n        setMinting(false);\n        setMinted(true);\n      } catch (err) {\n        setError((err as Error).message || 'Unknown token minting error');\n        setMinting(false);\n        setMinted(false);\n      }\n    }\n  }, [token, tokenId, tokenPrice]);// , gasPrice\n\n  if (tokenId === undefined) {\n    return null;\n  }\n\n  return (\n    <CheckerBlock>\n      {metadataLoading &&\n        <TokenCardWrapper>\n          <PriceTitle>\n            Token metadata loading...&nbsp;\n            <FontAwesomeIcon icon='sync-alt' spin={true} />\n          </PriceTitle>\n        </TokenCardWrapper>\n      }\n\n      {(!isMinted && !metadataLoading && !!tokenMetadata) &&\n        <TokenCardWrapper>\n          <TokenMintCard token={tokenMetadata} />\n          <BlockTitle center>\n            Cossack #{tokenId}\n          </BlockTitle>\n          {/* <GasPriceSelector\n            enabled={!!tokenMetadata && !isMinted}\n            paused={minting || isMinted}\n            provider={provider}\n            onChecked={setGasPrice}\n          /> */}\n          {!!tokenPrice &&\n            <PriceWrapper>\n              <PriceTitle>Minting price</PriceTitle>\n              <PriceValue>{ethersUtils.formatUnits(tokenPrice, 'ether')} ETH</PriceValue>\n            </PriceWrapper>\n          }\n          {/* {!!totalPrice &&\n            <PriceWrapper>\n              <PriceTitle>Total token minting costs (price + gas fees)</PriceTitle>\n              <PriceValue>{ethersUtils.formatUnits(totalPrice, 'ether')} ETH</PriceValue>\n            </PriceWrapper>\n          } */}\n          <MintButton\n            large\n            label='Mint NFT'\n            disabled={\n              minting ||\n              tokenId === undefined ||\n              tokenPrice === undefined //||\n              // gasPrice === undefined\n            }\n            loading={minting}\n            onClick={mint}\n          />\n\n        </TokenCardWrapper>\n      }\n      {isMinted &&\n        <TokenCardWrapper>\n          <PriceTitle large>\n            {`Congratulations! Token #${tokenId} has been successfully minted!`}\n          </PriceTitle>\n        </TokenCardWrapper>\n      }\n      {!!txHash &&\n        <TokenCardWrapper>\n          <TxBlock>\n            <TxTitle>\n              Transaction hash:&nbsp;\n              <TxHashValue\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`${defaultNetwork.blockExplorer}/tx/${txHash}`}\n              >\n                {centerEllipsis(txHash)}\n              </TxHashValue>\n            </TxTitle>\n          </TxBlock>\n        </TokenCardWrapper>\n      }\n      <ErrorMessage message={error} />\n    </CheckerBlock>\n  );\n};\n","import type { CCContract } from '../contractLib';\nimport type { Web3ModalProvider } from '../hooks/useWeb3Modal';\nimport type { CheckedToken } from './AvailChip';\nimport { TakenRange } from '../hooks/useTokenRange';\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useTokenRange } from '../hooks/useTokenRange';\nimport { Container } from './Layout/Container';\nimport { MintButton } from './buttons';\nimport { AvailChip } from './AvailChip';\nimport { MintCard } from './Mint/MintCard';\nimport { ErrorMessage } from './ErrorMessage';\nimport { useAppState } from '../store';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface TokensCheckerProps {\n  token: CCContract;\n  account: string;\n  provider: Web3ModalProvider;\n}\n\nexport const CheckerBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  padding: 40px;\n  background-color: rgb(${colors.grey});\n  margin-right: 8px;\n  width: 100%;\n  color: rgb(${colors.white});\n  border-radius: 20px;\n`;\n\nexport const ChipsBlock = styled.div`\n  margin: 20px 0 0 0;\n`;\n\nexport const QueryLabel = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-bottom: 8px;\n`;\n\nexport const Query = styled.textarea`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.white});\n  background-color: #363636;\n  border-radius: 6px;\n  padding: 10px;\n`;\n\nexport const inputValidator = (newValue: string, initialValue: string): string =>\n  /^[0-9 ]+$/g.exec(newValue) ? newValue : initialValue;\n\nexport const parseQuery = (query: string, range: TakenRange): number[] =>\n  query\n    .replace(/\\s\\s+/g, ' ')\n    .split(' ')\n    .map(t => parseInt(t))\n    .filter((t, i) => (t >= range.from && t < range.to && i <= 9));\n\nexport const isTokenExists = async (\n  token: CCContract,\n  tokenId: number\n): Promise<boolean> => token.isTokenMintable(tokenId);\n\nexport const TokensChecker = ({\n  token,\n  account,\n  provider\n}: TokensCheckerProps) => {\n  const {\n    isMintingPaused\n  } = useAppState();\n  const [range, tokenPrice, rangeError] = useTokenRange(token);\n  const [query, setQuery] = useState<string>('');\n  const [checking, setChecking] = useState<boolean>(false);\n  const [checkedList, setCheckedList] = useState<CheckedToken[]>([]);\n  const [mintTokenId, setMintTokenId] = useState<number | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const resetCheckerResults = () => {\n    setCheckedList([]);\n    setMintTokenId(undefined);\n    setChecking(false);\n    setError(undefined);\n  };\n\n  const isFounder = useMemo(() => range && range.from === 9000, [range]);\n\n  const defaultCb = useCallback(() => {\n    if (isMintingPaused && !isFounder) {\n      setError('Public tokens sale not started yet');\n      setTimeout(() => {\n        setError(undefined);\n      }, 2500);\n    }\n  }, [isMintingPaused, isFounder]);\n\n  useEffect(() => {\n    setQuery('');\n    resetCheckerResults();\n  }, [account]);\n\n  useEffect(() => {\n    setError(rangeError);\n  }, [rangeError]);\n\n  const check = useCallback(async () => {\n    try {\n      resetCheckerResults();\n      setChecking(true);\n\n      const parsedQuery = parseQuery(query, range);\n\n      if (parsedQuery.length === 0) {\n        throw new Error(\n          'None of the requested Ids are within the allowed range.'\n        );\n      }\n\n      const checked: CheckedToken[] = await Promise.all(\n        parsedQuery.map(async tokenId => ({\n          tokenId,\n          available: await isTokenExists(token, tokenId)\n        }))\n      );\n\n      setCheckedList(checked);\n      setChecking(false);\n    } catch (err) {\n      setError(\n        (err as Error).message || 'Unknown tokens availability checker error'\n      );\n      setChecking(false);\n    }\n  }, [token, query, range]);\n\n  if (!token || !account || !provider) {\n    return null;\n  }\n\n  if (!range) {\n    return (\n      <Container>\n        <CheckerBlock>\n          <div>\n            Tokens availability checker is loading...&nbsp;\n            <FontAwesomeIcon icon='sync-alt' spin={true} />\n          </div>\n        </CheckerBlock>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <CheckerBlock>\n        <QueryLabel>\n          {`To check tokens availability please enter tokens Ids in the range ${range.from}-${range.to} separated by whitespace (up to 10 Ids)`}\n        </QueryLabel>\n        <Query\n          rows={1}\n          value={query}\n          onChange={e => setQuery(inputValidator(e.target.value, query))}\n        />\n        <div>\n          <MintButton\n            label='Check availability'\n            loading={checking}\n            disabled={checking}\n            onClick={check}\n          />\n        </div>\n        <ErrorMessage message={error} />\n        {checkedList.length !== 0 &&\n          <ChipsBlock>\n            {checkedList.map(\n              (t, i) => <AvailChip\n                          key={i}\n                          token={t}\n                          selected={t.tokenId === mintTokenId}\n                          isFounder={isFounder}\n                          onClick={\n                            () => setMintTokenId(t.tokenId)\n                            // () => isMintingPaused && !isFounder\n                            //   ? defaultCb()\n                            //   : setMintTokenId(t.tokenId)\n                          }\n                        />\n            )}\n          </ChipsBlock>\n        }\n\n        {(!isMintingPaused || (isMintingPaused && isFounder)) &&\n          <MintCard\n            token={token}\n            provider={provider}\n            tokenId={mintTokenId}\n            tokenPrice={tokenPrice}\n          />\n        }\n      </CheckerBlock>\n    </Container>\n  );\n};\n","import type { BigNumber } from 'ethers';\nimport type { CCContract } from '../contractLib';\nimport { useState, useEffect } from 'react';\nimport { BigNumber as BN } from 'ethers';\n\nexport interface TakenRange {\n  from: number;\n  to: number;\n}\n\nexport type UseTokenRangeHook = [\n  range: TakenRange,\n  price: BigNumber,\n  error: string | undefined\n];\n\nexport const useTokenRange = (token: CCContract): UseTokenRangeHook => {\n  const [price, setPrice] = useState<BigNumber | undefined>();\n  const [range, setRange] = useState<TakenRange | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    const resetState = () => {\n      setError(undefined);\n      setPrice(undefined);\n      setRange(undefined);\n    };\n\n    const checkIsFounder = async () => {\n      try {\n        if (token) {\n          const tokenPrice = await token.getPrice();\n          const isFounder = await token.isFounder();\n          setPrice(\n            !isFounder\n              ? tokenPrice\n              : BN.from(0)\n          );\n          setRange(\n            !isFounder\n              ? {\n                from: 0,\n                to: 8999\n              }\n              : {\n                from: 9000,\n                to: 9999\n              }\n          );\n        } else {\n          resetState();\n        }\n      } catch (error) {\n        setError(error.message || 'Unknown error');\n        resetState();\n      }\n    };\n\n    checkIsFounder();\n  }, [token]);\n\n  return [range, price, error];\n};\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface ImageProps {\n  src: string;\n}\n\nexport const TeamBlockWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 10px;\n\n  @media (max-width: ${responsive.md}) {\n    display: block;\n    max-width: 230px;\n    margin: 0 auto 20px auto;\n  }\n`;\n\nexport const TeamBlockTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-top: 80px;\n  margin-left: 4px;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Dude = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 20px;\n  cursor: pointer;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n    margin-bottom: 12px;\n\n    &:nth-child(2) {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DudeTitle = styled.div`\n  font-size: ${fonts.size.tiny};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-top: 5px;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n  }\n`;\n\nexport const DudeImage = styled.img<ImageProps>`\n  width: 100px;\n  height: 100px;\n  border: 1px solid rgb(${colors.grey});\n  border-radius: 6px;\n`;\n\nexport const Team = () => {\n\n  return (\n    <>\n      <TeamBlockTitle>Team</TeamBlockTitle>\n      <TeamBlockWrapper>\n        <Dude onClick={() => window.open('https://www.facebook.com/andrey.ermolenko', '_blank')}>\n          <DudeImage src='images/t3.png' />\n          <DudeTitle>Andrey<br/>Ermolenko</DudeTitle>\n        </Dude>\n        <Dude onClick={() => window.open('https://www.linkedin.com/in/aleksey-chusov-94a928199', '_blank')}>\n          <DudeImage src='images/t4.png' />\n          <DudeTitle>Aleks<br/>Chusov<br/>(time4web3)</DudeTitle>\n        </Dude>\n        <Dude onClick={() => window.open('https://www.linkedin.com/in/kostiantyn-smyrnov/', '_blank')}>\n          <DudeImage src='images/t1.png' />\n          <DudeTitle>Kostiantyn<br/>Smyrnov</DudeTitle>\n        </Dude>\n      </TeamBlockWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../styles';\nimport { centerEllipsis } from '../utils/strings';\nimport { getTokenAddress } from '../config';\n\nexport const LinkWrapper = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.lightgrey});\n  margin: 40px 0 40px 0;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n  }\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n  color: rgb(${colors.white});\n`;\n\nexport const Label = styled.span`\n  white-space: nowrap;\n`;\n\nexport const Br = styled.br`\n  display: none;\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n  }\n`;\n\nexport const ContractLink = () => {\n\n  return (\n    <LinkWrapper>\n      <Label>\n        <strong>Verified smart contract:</strong>&nbsp;\n      </Label>\n      <Br />\n      <Link\n        href={`https://etherscan.io/address/${getTokenAddress()}#code`}\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        {centerEllipsis(getTokenAddress())}\n      </Link>\n    </LinkWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { useAppState } from '../store';\nimport { SignInButton, SignOutButton } from '../components/buttons/web3Modal';\nimport { Account } from '../components/Account';\nimport { MyTokens } from '../components/MyTokens';\nimport { TokensChecker } from '../components/TokensChecker';\nimport { Team } from '../components/Team';\nimport { ContractLink } from '../components/ContractLink';\nimport { colors, fonts, responsive } from '../styles';\n\n// Config\nimport { getNetworksNames } from '../config';\n\nconst allowedNetworksNames = getNetworksNames();\n\nconst PageWrapper = styled.div`\n  margin: 32px auto 0 auto;\n  padding: 0 20px 40px 20px;\n  width: 100%;\n  max-width: 1024px;\n  overflow: hidden;\n\n  @media (max-width: ${responsive.md}) {\n    margin: 28px auto 0 auto;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 34px;\n\n  @media (max-width: ${responsive.md}) {\n    margin-bottom: 28px;\n  }\n`;\n\nconst Logo = styled.div`\n  display: block;\n  background-image: url(images/logo-grn.svg);\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 36px;\n  height: 36px;\n  margin-right: 8px;\n\n  @media (max-width: ${responsive.md}) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: ${fonts.size.large};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.white});\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.small};\n  }\n`;\n\nconst Spacer = styled.div`\n  flex-grow: 1;\n`;\n\nconst AccountBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  white-space: nowrap;\n\n  @media (max-width: ${responsive.md}) {\n    align-items: flex-end;\n    flex-direction: column;\n    white-space: auto;\n  }\n`;\n\nconst SignOutButtonWrapper = styled.div`\n  margin-left: 8px;\n\n  @media (max-width: ${responsive.md}) {\n    /* margin: 6px 0 -32px 0; */\n  }\n`;\n\nconst WrongNetworkMessage = styled.div`\n  padding: 20px;\n  border-radius: 20px;\n  background-color: rgb(${colors.white});\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.blueblack});\n\n  @media (max-width: ${responsive.md}) {\n    padding: 16px;\n  }\n`;\n\nconst Banner =  styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 34px 0;\n  border-radius: 20px;\n\n  @media (max-width: ${responsive.md}) {\n    border-radius: 18px;\n    margin: 0 0 28px 0;\n  }\n`;\n\nconst BannerCossack = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  background-image: url(images/bn-bg2.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center right;\n  width: auto;\n  height: 400px;\n\n  @media (max-width: ${responsive.md}) {\n    background-size: cover;\n    background-position: center bottom;\n  }\n`;\n\nconst BannerBg = styled.div`\n  background-image: url(images/bn-bg1.svg);\n  background-repeat: no-repeat;\n  background-position: center left;\n  background-size: auto 100%;\n  width: auto;\n  height: 400px;\n  padding: 34px;\n\n  @media (max-width: ${responsive.md}) {\n    background-position: center top;\n    padding: 28px;\n  }\n`;\n\nconst CollectionTitle = styled.div`\n  font-size: 58px;\n  font-weight: ${fonts.weight.bold};\n  line-height: 47px;\n  margin-bottom: 40px;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: 50px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst CollectionInfo = styled.div`\n  font-size: 16px;\n  font-weight: ${fonts.weight.medium};\n  max-width: 370px;\n  margin-bottom: 40px;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: 16px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst OpenSeaLinkBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst OsTitle = styled.div`\n  font-size: 20px;\n  font-weight: ${fonts.weight.bold};\n  margin-right: 12px;\n`;\n\nconst OsLogo = styled.div`\n  background-image: url(images/opensea-logo.png);\n  background-repeat: no-repeat;\n  background-position: center left;\n  background-size: contain;\n  width: 157px;\n  height: 36px;\n`;\n\nexport const Main = () => {\n  const {\n    isEnabled,\n    isRightNetwork,\n    account,\n    token,\n    provider,\n    isOwnTokens\n  } = useAppState();\n\n  return (\n    <PageWrapper>\n      <Header>\n        <Logo />\n        <Title>CryptoCossacks</Title>\n        <Spacer />\n        <AccountBlock>\n          <Account account={account} />\n          <SignOutButtonWrapper>\n            <SignInButton />\n            <SignOutButton />\n          </SignOutButtonWrapper>\n        </AccountBlock>\n      </Header>\n\n      {!isOwnTokens &&\n        <Banner>\n          <BannerCossack>\n            <BannerBg>\n              <CollectionTitle>\n                Crypto<br/>Cossacks\n              </CollectionTitle>\n              <CollectionInfo>\n                Collection reflecting the masculinity and rebelliousness of the Ukrainian people.<br/>\n                All money raised will go to support the Ukrainian army and help people in these difficult times\n              </CollectionInfo>\n              <OpenSeaLinkBlock onClick={() => {\n                window.open('https://opensea.io/collection/cryptocossacks2022', '_blank');\n              }}>\n                <OsTitle>\n                  Open collection at\n                </OsTitle>\n                <OsLogo />\n              </OpenSeaLinkBlock>\n            </BannerBg>\n          </BannerCossack>\n        </Banner>\n      }\n\n      {!isRightNetwork &&\n        <WrongNetworkMessage>\n          {\n            allowedNetworksNames.length > 1\n              ? `You are connected to a wrong network. Please switch to one of: ${allowedNetworksNames.join(', ')} networks`\n              : `You are connected to a wrong network. Please switch to the ${allowedNetworksNames[0]} network`\n          }\n        </WrongNetworkMessage>\n      }\n\n      {isEnabled &&\n        <>\n          <MyTokens token={token} account={account} />\n          <TokensChecker token={token} account={account} provider={provider} />\n        </>\n      }\n\n      <Team />\n\n      <ContractLink />\n\n    </PageWrapper>\n  );\n};\n","import { AppStateProvider } from './store';\n\n// Pages\nimport { Main } from './pages/Main';\n\nconst App = () => {\n\n  return (\n    <AppStateProvider>\n      <Main />\n    </AppStateProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components';\nimport { globalStyle } from './styles';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n\nconst renderApp = () => {\n  render(\n    <StrictMode>\n      <GlobalStyle />\n      <App />\n    </StrictMode>,\n    document.getElementById('root')\n  );\n};\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}