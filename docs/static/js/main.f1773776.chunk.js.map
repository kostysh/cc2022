{"version":3,"sources":["../../index.ts","reportWebVitals.ts","styles.ts","utils/logger.ts","store/reducer.ts","hooks/useWeb3Modal.ts","hooks/useNetworkId.ts","hooks/useAccount.ts","contractLib/utils/regexp.ts","contractLib/utils/codes.ts","contractLib/utils/request.ts","contractLib/utils/errors.ts","config.ts","contractLib/api/getTokenById.ts","contractLib/api/getTokenMetadataById.ts","contractLib/api/getOwnedTokens.ts","contractLib/utils/sendHelper.ts","contractLib/api/mintToken.ts","contractLib/api/isPaused.ts","contractLib/api/estimateMinting.ts","contractLib/api/isFounder.ts","contractLib/index.ts","contractLib/api/isTokenMintable.ts","contractLib/api/getPrice.ts","contractLib/api/getNickName.ts","store/index.tsx","hooks/useToken.ts","hooks/useIsPaused.ts","components/buttons/index.tsx","components/buttons/web3Modal.tsx","utils/strings.ts","components/Account.tsx","hooks/usePoller.ts","components/Layout/Container.tsx","components/Layout/TokenCard.tsx","components/Typography/BlockTitle.tsx","components/Modal/index.tsx","components/MyTokens/index.tsx","hooks/useError.ts","components/AvailChip.tsx","components/ErrorMessage.tsx","components/Mint/MintCard.tsx","components/TokensChecker.tsx","hooks/useTokenRange.ts","components/Team.tsx","components/ContractLink.tsx","pages/Main.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faSyncAlt","faSignInAlt","faSignOutAlt","faCheckCircle","faBan","faSquare","faCheckSquare","faCircle","faPlus","faMinus","colors","fonts","tiny","small","medium","large","h1","h2","h3","h4","h5","h6","normal","semibold","bold","extrabold","Ukraine","IBM","responsive","globalStyle","concat","logFunction","subject","args","_console","console","log","apply","_toConsumableArray","Logger","error","_len","arguments","length","Array","_key","debug","info","logger","reducer","state","action","type","_objectSpread","isConnecting","payload","account","isRightNetwork","isEnabled","networkId","provider","injectedProvider","signIn","signOut","token","isOwnTokens","isMintingPaused","errors","filter","e","i","Error","initialState","ethereumAddress","HTTP_STATUS_CODES","OK","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","METHOD_NOT_ALLOWED","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","convertIpfsUri","uri","replace","config","infuraId","process","defaultNetworkId","Number","tokenAddress","imgBase","networks","name","chainId","blockExplorer","getDefaultNetwork","network","n","getTokenAddress","getImgBase","getTokenById","_asyncToGenerator","_regeneratorRuntime","mark","_callee","contract","tokenId","owner","metadata","wrap","_context","prev","next","BN","isBigNumber","from","ownerOf","sent","t0","abrupt","getNickName","image","toString","id","toNumber","description","attributes","stop","_x","_x2","getTokenMetadataById","getOwnedTokens","ownerAddress","balance","tokens","regexp","exec","eq","push","sendHelper","method","sender","overrides","transactionHashCb","_contractWithSigner$e","confirmations","contractWithSigner","gasAmount","tx","_args","undefined","SignerObject","connect","estimateGas","gasPrice","getBalance","mul","gt","hash","wait","_x3","_x4","_x5","_x6","mintToken","getSigner","isPaused","estimateMinting","value","getPrice","mint","isFounder","signer","address","getAddress","CCContract","contractAddress","providerOrUri","_classCallCheck","this","ethers","providers","JsonRpcProvider","isMetaMask","Web3Provider","send","Contract","CCossacksContract","abi","_createClass","key","isTokenMintable","StateContext","createContext","DispatchContext","useAppState","ctx","useContext","useAppDispatch","defaultNetwork","allowedNetworksIds","map","web3ModalConfig","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","AppStateProvider","children","_useAppReducer","useReducer","_useAppReducer2","_slicedToArray","dispatch","_useWeb3Modal","_useState","useState","_useState2","setProvider","_useState3","_useState4","setInjectedProvider","_useState5","_useState6","setIsConnecting","_useState7","_useState8","setError","web3Modal","useMemo","Web3modal","useCallback","clearCachedProvider","window","location","reload","web3ModalProvider","updateProvider","providerController","cachedProvider","on","code","reason","message","useEffect","setTimeout","useWeb3Modal","_useWeb3Modal2","web3ModalError","_useNetworkId","allowedNetworks","setNetworkId","isLoading","setIsLoading","setIsRightNetwork","getNetworkId","getNetwork","includes","JSON","stringify","useNetworkId","_useNetworkId2","isNetworkIdLoading","networkError","_useAccount","setAccount","setLoading","getAccount","accounts","listAccounts","useAccount","_useAccount2","isAccountLoading","accountError","_useToken","setToken","err","useToken","_useToken2","tokenError","_useIsPaused","setIsPaused","resetState","checkIsPaused","paused","useIsPaused","_useIsPaused2","isPausedError","_jsx","Provider","Button","styled","button","_templateObject","_taggedTemplateLiteral","RedButton","_templateObject2","ConnectButton","_templateObject3","GreenButton","_templateObject4","ButtonLabelWrapper","div","attrs","props","mr","_templateObject5","_ref2","RefreshButton","_templateObject6","_templateObject7","_templateObject8","_ref4","refresh","refreshing","FontAwesomeIcon","onClick","icon","size","spin","color","MintButton","_ref5","label","loading","_objectWithoutProperties","_excluded","_jsxs","SignOutButtonWrapper","LabelDesc","span","LabelMob","SignInButton","_useAppState","disabled","SignOutButton","_useAppState2","centerEllipsis","text","width","substring","AccountWrapper","AccountIconWrapper","AccountIcon","Blockies","AccountHash","Account","seed","scale","navigator","clipboard","writeText","resolve","Container","ImageWrapper","ImageWrapperInner","TokenCardWrapper","TokenId","TokenImage","_ref3","height","src","_ref6","TokenCard","_ref7","TokenMintCard","_ref8","BlockTitle","center","Portal","_ref$onClose","onClose","closeOnEscapeKeyDown","keyCode","document","body","addEventListener","removeEventListener","createPortal","getElementById","ModalWrapper","ModalContent","ModalHeader","ModalTitle","ModalBody","ModalFooter","CloseBtn","Modal","title","_ref2$show","show","_ref2$onClose","stopPropagation","TokenCardsWrapper","RefreshBtnWrapper","RefreshBtnInner","MyTokens","_ref2$pollInterval","pollInterval","useError","setRefreshing","ownedTokens","setOwnedTokens","details","setDetails","newOwnedTokens","ownedTokensState","_defineProperty","fn","enabled","interval","pollerName","TypeError","failures","poll","usePoller","t","_Fragment","ChipWrapper","selected","IconWrapper","Chip","available","founder","AvailChip","_ref4$onClick","ErrorMessageWrapper","ErrorMessage","CheckerBlock","PriceWrapper","PriceTitle","PriceValue","TxBlock","TxTitle","TxHashValue","a","_templateObject9","fetchTokenMeta","MintCard","tokenPrice","tokenMetadata","setTokenMetadata","metadataLoading","setMetadataLoading","minting","setMinting","txHash","setTxHash","_useState9","_useState10","isMinted","setMinted","_useState11","_useState12","res","catch","finally","_callee2","_context2","ethersUtils","formatUnits","target","rel","href","ChipsBlock","QueryLabel","Query","textarea","Alert","parseQuery","query","range","split","parseInt","to","isTokenExists","TokensChecker","_useTokenRange","price","setPrice","setRange","checkIsFounder","useTokenRange","_useTokenRange2","rangeError","setQuery","checking","setChecking","checkedList","setCheckedList","mintTokenId","setMintTokenId","resetCheckerResults","check","_callee3","parsedQuery","checked","_context3","Promise","all","t1","rows","onChange","newValue","initialValue","TeamBlockWrapper","TeamBlockTitle","Dude","DudeTitle","DudeImage","img","Team","open","LinkWrapper","Link","Label","Br","br","ContractLink","allowedNetworksNames","PageWrapper","Header","Logo","Title","Spacer","AccountBlock","WrongNetworkMessage","Banner","BannerCossack","_templateObject10","BannerBg","_templateObject11","CollectionTitle","_templateObject12","CollectionInfo","_templateObject13","OpenSeaLinkBlock","_templateObject14","OsTitle","_templateObject15","OsLogo","_templateObject16","Main","join","App","GlobalStyle","createGlobalStyle","render","StrictMode"],"mappings":"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","file":"static/js/main.f1773776.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoCossacks = void 0;\nconst CryptoCossacks2022_json_1 = __importDefault(require(\"./artifacts/contracts/CryptoCossacks2022.sol/CryptoCossacks2022.json\"));\nexports.CryptoCossacks = CryptoCossacks2022_json_1.default;\n//# sourceMappingURL=index.js.map","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  // IconLookup,\n  // IconDefinition,\n  // findIconDefinition,\n  library\n} from '@fortawesome/fontawesome-svg-core';\nimport {\n  faSignInAlt,\n  faSignOutAlt,\n  faSyncAlt,\n  faCheckCircle,\n  faBan,\n  faSquare,\n  faCheckSquare,\n  faCircle,\n  faPlus,\n  faMinus\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faSyncAlt,\n  faSignInAlt,\n  faSignOutAlt,\n  faCheckCircle,\n  faBan,\n  faSquare,\n  faCheckSquare,\n  faCircle,\n  faPlus,\n  faMinus\n);\n\nexport const colors: { [name: string]: string } = {\n  white: '255, 255, 255',\n  light: '245, 245, 245',\n  black: '0, 0, 0',\n  blueblack: '0, 0, 16',\n  dark: '74, 74, 74',\n  lightgrey: '172, 172, 172',\n  grey: '25, 25, 25',\n  green: '96, 223, 181',\n  purple: '101, 94, 179',\n  red: '242, 62, 94',\n};\n\nexport const fonts = {\n  size: {\n    tiny: \"12px\",\n    small: \"16px\",\n    medium: \"19px\",\n    large: \"34px\",\n    h1: \"60px\",\n    h2: \"50px\",\n    h3: \"40px\",\n    h4: \"32px\",\n    h5: \"24px\",\n    h6: \"20px\",\n  },\n  weight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n  },\n  family: {\n    Ukraine: 'Ukraine, sans-serif',\n    IBM: '\"IBM Plex Mono\", monospace',\n  },\n};\n\nexport const transitions = {\n  short: \"all 0.1s ease-in-out\",\n  base: \"all 0.2s ease-in-out\",\n  long: \"all 0.3s ease-in-out\",\n  button: \"all 0.15s ease-in-out\",\n};\n\nexport const shadows = {\n  soft: \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n  medium: \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\n  hover: \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n};\n\nexport const responsive = {\n  xs: '0',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1400px',\n};\n\nexport const globalStyle = `\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Thin.eot);\n    src: url(fonts/e-Ukraine-Thin.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Thin.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Thin.woff) format(\"woff\"), url(fonts/e-Ukraine-Thin.ttf) format(\"truetype\");\n    font-weight: 100;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-UltraLight.eot);\n    src: url(fonts/e-Ukraine-UltraLight.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-UltraLight.woff2) format(\"woff2\"), url(fonts/e-Ukraine-UltraLight.woff) format(\"woff\"), url(fonts/e-Ukraine-UltraLight.ttf) format(\"truetype\");\n    font-weight: 200;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Light.eot);\n    src: url(fonts/e-Ukraine-Light.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Light.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Light.woff) format(\"woff\"), url(fonts/e-Ukraine-Light.ttf) format(\"truetype\");\n    font-weight: 300;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Regular.eot);\n    src: url(fonts/e-Ukraine-Regular.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Regular.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Regular.woff) format(\"woff\"), url(fonts/e-Ukraine-Regular.ttf) format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Medium.eot);\n    src: url(fonts/e-Ukraine-Medium.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Medium.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Medium.woff) format(\"woff\"), url(fonts/e-Ukraine-Medium.ttf) format(\"truetype\");\n    font-weight: 600;\n    font-style: normal;\n    font-display: swap\n  }\n\n  @font-face {\n    font-family: Ukraine;\n    src: url(fonts/e-Ukraine-Bold.eot);\n    src: url(fonts/e-Ukraine-Bold.eot?#iefix) format(\"embedded-opentype\"), url(fonts/e-Ukraine-Bold.woff2) format(\"woff2\"), url(fonts/e-Ukraine-Bold.woff) format(\"woff\"), url(fonts/e-Ukraine-Bold.ttf) format(\"truetype\");\n    font-weight: 700;\n    font-style: normal;\n    font-display: swap\n  }\n\n\n  @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500;600;700&display=swap');\n\n  html, body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    height: auto;\n    font-family: ${fonts.family.Ukraine};\n    font-style: normal;\n    font-stretch: normal;\n    font-weight: ${fonts.weight.normal};\n    font-size: ${fonts.size.medium};\n    background-color: rgb(${colors.blueblack});\n    color: rgb(${colors.white});\n    overflow-y:auto;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n      -webkit-text-size-adjust: 100%;\n    -webkit-overflow-scrolling: touch;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n\n  button {\n    border-style: none;\n    line-height: 1em;\n    background-image: none;\n    outline: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  [tabindex] {\n    outline: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  a, p, h1, h2, h3, h4, h5, h6 {\n    text-decoration: none;\n    margin: 0;\n    padding: 0;\n    margin: 0.7em 0;\n  }\n\n  h1 {\n    font-size: ${fonts.size.h1}\n  }\n  h2 {\n    font-size: ${fonts.size.h2}\n  }\n  h3 {\n    font-size: ${fonts.size.h3}\n  }\n  h4 {\n    font-size: ${fonts.size.h4}\n  }\n  h5 {\n    font-size: ${fonts.size.h5}\n  }\n  h6 {\n    font-size: ${fonts.size.h6}\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;\n    text-decoration: none;\n    color: inherit;\n    outline: none;\n  }\n\n  b,\n  strong {\n    font-weight: inherit;\n    font-weight: bolder;\n  }\n\n  ul, li {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  * {\n    box-sizing: border-box !important;\n  }\n\n\n  input {\n    -webkit-appearance: none;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  input[type=\"color\"],\n  input[type=\"date\"],\n  input[type=\"datetime\"],\n  input[type=\"datetime-local\"],\n  input[type=\"email\"],\n  input[type=\"month\"],\n  input[type=\"number\"],\n  input[type=\"password\"],\n  input[type=\"search\"],\n  input[type=\"tel\"],\n  input[type=\"text\"],\n  input[type=\"time\"],\n  input[type=\"url\"],\n  input[type=\"week\"],\n  select:focus,\n  textarea {\n    font-size: 16px;\n  }\n`;\n","export interface LoggerApi {\n  error: (...message: unknown[]) => void,\n  debug: (...message: unknown[]) => void,\n  info: (...message: unknown[]) => void\n};\n\n// Possible log level types\nconst logLevels: { [k: string]: number } = {\n  'none': 0,\n  'error': 1,\n  'debug': 2,\n  'info': 3\n};\n\n// Getting log level from the ENV\nconst logLevel = logLevels[process.env.REACT_APP_LOG_LEVEL || 'none'] || 0;\n\n// Default logging function\nconst logFunction = (subject: string, args: unknown[]) =>\n  console.log(...[`${subject}:`, ...args]);\n\n// Creates logger\nconst Logger = (subject: string): LoggerApi =>\n  ({\n    error: (...args) => {\n      if (logLevel >= 1) {\n        logFunction(subject, args);\n      }\n    },\n    debug: (...args) => {\n      if (logLevel >= 2) {\n        logFunction(subject, args);\n      }\n    },\n    info: (...args) => {\n      if (logLevel >= 3) {\n        logFunction(subject, args);\n      }\n    }\n  });\n\nexport default Logger;\n","import type { Web3ModalProvider } from '../hooks/useWeb3Modal';\nimport type { IProviderInfo } from 'web3modal';\nimport type { Action } from './actions';\nimport type { CCContract } from '../contractLib';\nimport { useReducer } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('Reducer');\n\nexport interface State {\n  errors: string[];\n  isConnecting: boolean;\n  isRightNetwork: boolean;\n  isEnabled: boolean;\n  isMintingPaused?: boolean;\n  signIn: Function;\n  signOut: Function;\n  networkId?: number;\n  provider?: Web3ModalProvider;\n  injectedProvider?: IProviderInfo;\n  account?: string;\n  token?: CCContract;\n  isOwnTokens?: boolean;\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  logger.debug('Dispatch', action);\n  const type = action.type;\n  switch (type) {\n    case 'SET_CONNECTING':\n      return {\n        ...state,\n        isConnecting: action.payload\n      };\n    case 'SET_ACCOUNT':\n      return {\n        ...state,\n        account: action.payload\n      };\n    case 'SET_IS_RIGHT_NETWORK':\n      return {\n        ...state,\n        isRightNetwork: action.payload\n      };\n    case 'SET_IS_ENABLED':\n      return {\n        ...state,\n        isEnabled: action.payload\n      };\n    case 'SET_NETWORK_ID':\n      return {\n        ...state,\n        networkId: action.payload\n      };\n    case 'SET_PROVIDER':\n      return {\n        ...state,\n        provider: action.payload\n      };\n    case 'SET_INJECTED_PROVIDER':\n      return {\n        ...state,\n        injectedProvider: action.payload\n      };\n    case 'SET_WEB3MODAL_FUNCTIONS':\n      return {\n        ...state,\n        signIn: action.payload.signIn,\n        signOut: action.payload.signOut\n      };\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload\n      };\n    case 'SET_IS_OWN_TOKENS':\n      return {\n        ...state,\n        isOwnTokens: action.payload\n      };\n    case 'SET_MINTING_PAUSED':\n      return {\n        ...state,\n        isMintingPaused: action.payload\n      };\n    case 'ERROR_ADD':\n      return {\n        ...state,\n        errors: [\n          ...state.errors,\n          action.payload\n        ]\n      };\n    case 'ERROR_REMOVE':\n      return {\n        ...state,\n        errors: state.errors.filter((e, i) => i !== action.payload)\n      };\n    case 'ERROR_REMOVE_ALL':\n      return {\n        ...state,\n        errors: []\n      };\n    default:\n      throw new Error(`Unknown state action type: ${type}`);\n  }\n};\n\nconst initialState: State = {\n  isConnecting: false,\n  isRightNetwork: true,\n  isEnabled: false,\n  signIn: () => {},\n  signOut: () => {},\n  errors: []\n};\n\nexport const useAppReducer = () => useReducer(reducer, initialState);\n","import type { IProviderInfo, IProviderControllerOptions } from 'web3modal';\nimport { useMemo, useCallback, useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport Web3modal from 'web3modal';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useWeb3Modal');\n\nexport type Web3ModalConfig = Partial<IProviderControllerOptions>;\n\nexport type Web3ModalProvider = ethers.providers.Web3Provider;\n\nexport type  Web3ModalHook = [\n  provider: Web3ModalProvider | undefined,\n  injectedProvider: IProviderInfo | undefined,\n  isConnecting: boolean,\n  signIn: Function,\n  signOut: Function,\n  error: string | null\n];\n\n// Web3Modal React Hook\nexport const useWeb3Modal = (web3ModalConfig: Web3ModalConfig): Web3ModalHook => {\n  const [provider, setProvider] = useState<Web3ModalProvider | undefined>();\n  const [injectedProvider, setInjectedProvider] = useState<IProviderInfo | undefined>();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Web3Modal initialization\n  const web3Modal = useMemo(\n    () => new Web3modal(web3ModalConfig),\n    [web3ModalConfig]\n  );\n\n  const signOut = useCallback(() => {\n    web3Modal.clearCachedProvider();\n    setProvider(undefined);\n    // SignOut issue when using walletconnect: https://github.com/Web3Modal/web3modal/issues/354\n    logger.info(`Logged Out`);\n    window.location.reload();\n  }, [web3Modal]);\n\n  const signIn = useCallback(async () => {\n    try {\n      setError(null);\n      setIsConnecting(true);\n      setInjectedProvider(\n        (web3Modal as any).providerController.cachedProvider === 'injected'\n          ? (web3Modal as any).providerController.injectedProvider\n          : undefined\n      );\n\n      const web3ModalProvider = await web3Modal.connect();\n\n      const updateProvider = () => setProvider(\n        new ethers.providers.Web3Provider(web3ModalProvider)\n      );\n      updateProvider();\n\n      // Subscribe to provider events compatible with EIP-1193 standard\n      // Subscribe to accounts change\n      web3ModalProvider.on('chainChanged', (chainId: number) => {\n        logger.info(`Chain changed: ${chainId}`);\n        updateProvider();\n      });\n\n      // Subscribe to chainId change\n      web3ModalProvider.on('accountsChanged', () => {\n        logger.info(`Accounts changed`);\n        updateProvider();\n      });\n\n      // Subscribe to provider disconnection\n      web3ModalProvider.on('disconnect', (code: number, reason: string) => {\n        logger.info(`Disconnected with code: ${code} and reason: ${reason}`);\n        signOut();\n      });\n\n      logger.info(`Logged In`);\n    } catch (error) {\n      setIsConnecting(false);\n\n      if (error) {\n        logger.error(error);\n        setError((error as Error).message);\n      } else {\n        logger.error('Unknown error');\n      }\n    }\n  }, [web3Modal, signOut]);\n\n  useEffect(() => {\n    if (!provider && web3Modal.cachedProvider) {\n      signIn();\n    } else if (provider) {\n      setTimeout(() => setIsConnecting(false), 250);\n    }\n  }, [provider, web3Modal.cachedProvider, signIn]);\n\n  return [\n    provider,\n    injectedProvider,\n    isConnecting,\n    signIn,\n    signOut,\n    error\n  ];\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useNetworkId');\n\nexport type NetworkIdHook = [\n  networkId: number | undefined,\n  isNetworkIdLoading: boolean,\n  isRightNetwork: boolean,\n  error: string | null\n];\n\n// useNetworkId react hook\nexport const useNetworkId = (\n  provider: Web3ModalProvider | undefined,\n  allowedNetworks: number[]\n): NetworkIdHook => {\n  const [networkId, setNetworkId] = useState<number | undefined>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRightNetwork, setIsRightNetwork] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setError(null);\n\n    if (!provider) {\n      return setNetworkId(undefined);\n    }\n\n    const getNetworkId = async () => {\n      try {\n        setIsLoading(true);\n        const network = await provider.getNetwork();\n        setIsLoading(false);\n        logger.info('getNetwork:', network);\n\n        if (network) {\n\n          if (allowedNetworks.includes(network.chainId)) {\n            setNetworkId(network.chainId);\n            setIsRightNetwork(true);\n          } else {\n            throw new Error(\n              `Invalid network ${network.chainId} though expected one of ${JSON.stringify(allowedNetworks)}`\n            );\n          }\n        } else {\n          setNetworkId(undefined);\n          setIsRightNetwork(false);\n        }\n      } catch (error) {\n        setIsLoading(false);\n        setNetworkId(undefined);\n        setIsRightNetwork(false);\n\n        if (error) {\n          logger.error(error);\n          setError((error as Error).message);\n        } else {\n          logger.error('Unknown error');\n        }\n      }\n    };\n\n    getNetworkId();\n  }, [provider, allowedNetworks]);\n\n  return [\n    networkId,\n    isLoading,\n    isRightNetwork,\n    error\n  ];\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('useAccount');\n\nexport type UseAccountHook = [\n  account: string | undefined,\n  isLoading: boolean,\n  error: string | null\n];\n\n// useAccount react hook\nexport const useAccount = (\n  provider: Web3ModalProvider | undefined\n): UseAccountHook => {\n  const [account, setAccount] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!provider) {\n      return setAccount(undefined);\n    }\n\n    const getAccount = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const accounts = await provider.listAccounts();\n        logger.info(`listAccounts:`, accounts);\n        setAccount(accounts[0]);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n\n        if (error) {\n          logger.error(error);\n          setError((error as Error).message);\n        } else {\n          logger.error('Unknown error');\n        }\n      }\n    };\n\n    getAccount();\n  }, [provider]);\n\n  return [account, isLoading, error];\n};\n","// Common\nexport const phone = /^([+]{0,1})([0-9- ()/]+)$/;\nexport const uri = /^(https|http|wss|ws){1}:\\/\\/([\\w\\d.-]+)(:(\\d*))?(\\/[\\w\\d.-?=#&%-_]*)?$/;\nexport const uriHttp = /^(https|http){1}:\\/\\/([\\w\\d.-]+)(:(\\d*))?(\\/[\\w\\d.-?=#&%-_]*)?$/;\nexport const email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-_0-9]+\\.)+[a-zA-Z]{2,}))$/i;\nexport const isoDate = /(\\d{4})-(\\d{2})-(\\d{2})T((\\d{2}):(\\d{2}):(\\d{2}))\\.(\\d{3})([Z]*([+]\\d{2}:\\d{2})*)/;\n\n// Crypto addresses\nexport const ethereumAddress = /^0x[a-fA-F0-9]{40}$/;\nexport const bitcoinAddress = /^(bc1|[13]{1})([a-zA-HJ-NP-Z0-9]{25,39})$/;\nexport const blockchainAccountId = /^([a-zA-Z-0-9]+)@([a-zA-Z-0-9]+):([a-zA-Z-0-9]+)$/;\nexport const blockchainAccountIdGrouped = /^(?<accountId>[a-zA-Z-0-9]+)@(?<blockchainType>[a-zA-Z-0-9]+):(?<blockchainId>[a-zA-Z-0-9]+)$/;\n\n// Public keys (as strings)\nexport const X25519 = /^(MCowBQYDK2VuAyEA[a-zA-Z0-9/]{43}=)$/;\nexport const secp256k1 = /^MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAE[a-zA-Z0-9+/]{86}==$/;\n\n// Hashes\nexport const bytes32 = /^0x[a-fA-F0-9]{64}$/;\n\n// Banks accounts\nexport const swift = /^[a-zA-Z]{4}[ -]{0,1}[a-zA-Z]{2}[ -]{0,1}[a-zA-Z0-9]{2}[ -]{0,1}[XXX0-9]{0,3}$/;\nexport const iban = /^([A-Z]{2}[ -]?[0-9]{2})(?=(?:[ -]?[A-Z0-9]){9,30}$)((?:[ -]?[A-Z0-9]{3,5}){2,7})([ -]?[A-Z0-9]{1,3})?$/;\n\n// DID\nexport const did = /^did:orgid:([0-9])*(?::)?(0x[a-fA-F0-9]{64})+(?:[?])?([0-9a-zA-Z_=&%-]+)?(?:#)?([[0-9a-zA-Z-]+)?$/;\nexport const didOnly = /^did:orgid:([0-9])*(?::)?(0x[a-fA-F0-9]{64})+$/;\nexport const didGrouped = /^(?<did>did:(?<method>orgid):(?<network>[0-9]*)?(?::)?(?<id>0x[a-fA-F0-9]{64})+)(?:[?])?(?<query>[0-9a-zA-Z_=&%-]+)?(?:#)?(?<fragment>[[0-9a-zA-Z-]+)?$/;\n\n// UUID\nexport const uuid4 = /^(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)$/;\n\n// IPFS/IPNS\nexport const ipfs = /^((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48})$/;\nexport const ipfsCidV0 = /^(Qm|QM|qm|qM){1}[1-9A-Za-z]{44}$/;\nexport const ipfsCidV1Base32 = /^[bB]{1}[A-Za-z2-7]{58}$/;\nexport const ipfsCidV1Base58btc = /^[zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}$/;\nexport const ipfsUri = /^ipfs:\\/\\/(((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}))$/;\nexport const ipfsUriGrouped = /^(?<protocol>ipfs:\\/\\/)(?<cid>((?:Qm|QM|qm|qM){1}[1-9A-Za-z]{44})|([bB]{1}[A-Za-z2-7]{58})|([zZ]{1}[1-9A-HJ-NP-Za-km-z]{48}))$/;\n","export type Status =\n  | 'OK'\n  | 'BAD_REQUEST'\n  | 'UNAUTHORIZED'\n  | 'FORBIDDEN'\n  | 'NOT_FOUND'\n  | 'METHOD_NOT_ALLOWED'\n  | 'INTERNAL_SERVER_ERROR'\n  | 'NOT_IMPLEMENTED'\n  | 'BAD_GATEWAY'\n  | 'SERVICE_UNAVAILABLE';\n\nexport type Code = 200 | 400 | 401 | 403 | 404 | 405 | 500 | 501 | 502 | 503;\n\nexport type Method =\n  | 'get' | 'GET'\n  | 'delete' | 'DELETE'\n  | 'head' | 'HEAD'\n  | 'options' | 'OPTIONS'\n  | 'post' | 'POST'\n  | 'put' | 'PUT'\n  | 'patch' | 'PATCH'\n  | 'purge' | 'PURGE'\n  | 'link' | 'LINK'\n  | 'unlink' | 'UNLINK';\n\nexport type HttpStatuses = {\n  [key in Status]: Status\n}\n\nexport type Methods = {\n  [key in Method]: Method\n}\n\nexport type HttpStatusCodes = {\n  [key in Status]: Code\n}\n\n// HTTP status\nexport const HTTP_STATUS: HttpStatuses = {\n  OK: 'OK',\n  BAD_REQUEST: 'BAD_REQUEST',\n  UNAUTHORIZED: 'UNAUTHORIZED',\n  FORBIDDEN: 'FORBIDDEN',\n  NOT_FOUND: 'NOT_FOUND',\n  METHOD_NOT_ALLOWED: 'METHOD_NOT_ALLOWED',\n  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',\n  NOT_IMPLEMENTED: 'NOT_IMPLEMENTED',\n  BAD_GATEWAY: 'BAD_GATEWAY',\n  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',\n};\n\n// HTTP status codes\nexport const HTTP_STATUS_CODES: HttpStatusCodes = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n};\n\n// HTTP methods\nexport const HTTP_METHODS: Methods = {\n  GET: 'GET',\n  get: 'GET',\n  POST: 'POST',\n  post: 'POST',\n  PUT: 'PUT',\n  put: 'PUT',\n  DELETE: 'DELETE',\n  delete: 'DELETE',\n  PATCH: 'PATCH',\n  patch: 'PATCH',\n  head: 'HEAD',\n  HEAD: 'HEAD',\n  options: 'OPTIONS',\n  OPTIONS: 'OPTIONS',\n  purge: 'PURGE',\n  PURGE: 'PURGE',\n  link: 'LINK',\n  LINK: 'LINK',\n  unlink: 'UNLINK',\n  UNLINK: 'UNLINK'\n};\n","// import CID from 'cids';\nimport type { Method } from './codes';\nimport type {\n  CancelTokenSource,\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseTransformer\n} from 'axios';\nimport axios from 'axios';\nimport { HttpError } from './errors';\nimport {\n  HTTP_STATUS,\n  HTTP_METHODS\n} from './codes';\nimport * as regexp from './regexp';\n\nexport interface ExtraHeaders {\n  [header: string]: string\n}\n\n// export const convertIpfsUri = (uri: string): string => {\n//   const parts = uri.replace('ipfs://', '').split('/');\n//   // console.log('@@@', parts);\n//   return `https://${new CID(parts[0]).toV1().toString('base32')}.ipfs.dweb.link/${parts[1]}`\n// }\n\nexport const convertIpfsUri = (uri: string): string =>\n  uri.replace('ipfs://', 'https://dweb.link/ipfs/'); // http://localhost:9090/ipfs/\n\nexport const createAuthBearerHeader = (jwt: string): ExtraHeaders => ({\n  'Authorization': `Bearer ${jwt}`\n});\n\n// Send HTTP request\nexport const request = async (\n  url: string,\n  method: Method,\n  data?: unknown,\n  extraHeaders?: ExtraHeaders,\n  timeout = 10000,\n  transformResponse?: AxiosResponseTransformer\n): Promise<unknown> => {\n\n  if (!regexp.uri.exec(url)) {\n    throw new HttpError(\n      `Request URL not matching well formed URI criteria: ${url}`,\n      'BAD_REQUEST'\n    );\n  }\n\n  if (!Object.keys(HTTP_METHODS).includes(method)) {\n    throw new HttpError(\n      `Request method not allowed: ${method}`,\n      'BAD_REQUEST'\n    );\n  }\n\n  // Configure connection timeout handler\n  const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\n  const connectionTimeout = setTimeout(\n    () => cancelTokenSource\n      .cancel(\n        `Cannot connect to the source: ${url}`\n      ),\n    timeout\n  );\n\n  try {\n    const request: AxiosRequestConfig = {\n      url,\n      method,\n      timeout,\n      headers: {\n        'Accept': 'application/json',\n        // 'Accept-Encoding': 'gzip,deflate', // Required for node.js environment only\n        'Cache-Control': 'no-cache',\n        // 'Connection': 'keep-alive',\n        ...(\n          method !== 'get'\n            ? { 'Content-Type': 'application/json' }\n            : {}\n        ),\n        ...(\n          extraHeaders\n            ? extraHeaders\n            : {}\n        )\n      },\n      data,\n      cancelToken: cancelTokenSource.token,\n      transformResponse\n    };\n\n    const response: AxiosResponse = await axios(request);\n\n    clearTimeout(connectionTimeout);\n\n    return response.data;\n  } catch (error) {\n\n    clearTimeout(connectionTimeout);\n\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n\n      // Handle errors in the response data\n      if (error.response.data && error.response.data.message) {\n        error.message = error.response.data.message;\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n    throw new HttpError(\n      error.message,\n      HTTP_STATUS.BAD_GATEWAY\n    );\n  }\n};\n","import {\n  Status,\n  Code,\n  HTTP_STATUS_CODES,\n} from './codes';\n\nexport type ErrorArgs = [string, Status?];\n\nexport interface HttpError {\n  code: Code,\n  status: Status\n}\n\n/**\n * Generate custom error with HTTP codes support\n * @example\n * new HttpError('Cannot find you in the list', 'FORBIDDEN');\n */\nexport class HttpError extends Error {\n  constructor (...args: ErrorArgs) {\n    super(args[0]);\n\n    if (args[1]) {\n      this.code = HTTP_STATUS_CODES[args[1]] || HTTP_STATUS_CODES.INTERNAL_SERVER_ERROR;\n      this.status = args[1];\n    }\n  }\n}\n","import Logger from './utils/logger';\n\n// Initialize logger\nconst logger = Logger('Config');\n\nexport interface NetworkConfig {\n  name: string;\n  chainId: number;\n  blockExplorer: string;\n}\n\nexport interface DappConfig {\n  infuraId: string;\n  defaultNetworkId: number;\n  tokenAddress: string;\n  networks: NetworkConfig[];\n  imgBase: string;\n}\n\nif (!process.env.REACT_APP_NETWORK_ID || process.env.REACT_APP_NETWORK_ID === '') {\n  logger.error('REACT_APP_NETWORK_ID must be provided in the ENV');\n  throw new Error('REACT_APP_NETWORK_ID must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_INFURA_ID || process.env.REACT_APP_INFURA_ID === '') {\n  logger.error('REACT_APP_INFURA_ID must be provided in the ENV');\n  throw new Error('REACT_APP_INFURA_ID must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_TOKEN_ADDRESS) {\n  logger.error('REACT_APP_TOKEN_ADDRESS must be provided in the ENV');\n  throw new Error('REACT_APP_TOKEN_ADDRESS must be provided in the ENV');\n}\n\nif (!process.env.REACT_APP_IMG_BASE) {\n  logger.error('REACT_APP_IMG_BASE must be provided in the ENV');\n  throw new Error('REACT_APP_IMG_BASE must be provided in the ENV');\n}\n\nconst config: DappConfig = {\n  infuraId: process.env.REACT_APP_INFURA_ID,\n  defaultNetworkId: Number(process.env.REACT_APP_NETWORK_ID),\n  tokenAddress: process.env.REACT_APP_TOKEN_ADDRESS,\n  imgBase: process.env.REACT_APP_IMG_BASE,\n  networks: [\n    // {\n    //   name: 'rinkeby',\n    //   chainId: 4,\n    //   blockExplorer: 'https://rinkeby.etherscan.io'\n    // },\n    {\n      name: 'main',\n      chainId: 1,\n      blockExplorer: 'https://etherscan.io'\n    }\n  ]\n};\n\nexport const getInfuraId = (): string => {\n  return config.infuraId;\n}\n\nexport const getNetworks = () => config.networks;\n\nexport const getNetworksIds = () => config.networks.map(n => n.chainId);\n\nexport const getNetworksNames = () => config.networks.map(n => n.name);\n\nexport const getDefaultNetwork = (): NetworkConfig => {\n  const network = config.networks\n    .filter(n => n.chainId === config.defaultNetworkId)[0];\n  if (!network) {\n    logger.error('Network not found in the configuration');\n    throw new Error('Network not found in the configuration');\n  }\n  return network;\n}\n\nexport const getTokenAddress = () => config.tokenAddress;\n\nexport const getImgBase = () => config.imgBase;\n\nexport default config;\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport type { NFTMetadata } from '../../schemas/types';\nimport { BigNumber as BN } from 'ethers';\nimport { convertIpfsUri } from '../utils/request';\nimport { getImgBase } from '../../config';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('getTokenById');\n\n// Returns a token information\nexport const getTokenById = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<TokenData | null> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  let owner: string;\n  let metadata: Partial<NFTMetadata>;\n\n  try {\n    owner = await contract.ownerOf(tokenId);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  // let tokenUri = await contract.tokenURI(tokenId);\n  // tokenUri = convertIpfsUri(tokenUri);\n  const name = await contract.getNickName(tokenId);\n\n  metadata = {\n    image: `ipfs://${getImgBase()}/${tokenId.toString()}.png`,\n    name\n  }\n\n  // metadata = await request(\n  //   tokenUri,\n  //   'GET',\n  //   undefined,\n  //   undefined,\n  //   100000 // 100sec timeout\n  // ) as NFTMetadata;\n  metadata.image = convertIpfsUri(metadata.image);\n\n  return {\n    id: tokenId.toNumber(),\n    image: metadata.image,\n    name: metadata.name,\n    description: metadata.description,\n    attributes: metadata.attributes,\n    owner\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport type { NFTMetadata } from '../../schemas/types';\nimport { BigNumber as BN } from 'ethers';\nimport { convertIpfsUri } from '../utils/request';\nimport { getImgBase } from '../../config';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('getTokenMetadataById');\n\n// Returns a token information\nexport const getTokenMetadataById = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<TokenData | null> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  let metadata: Partial<NFTMetadata>;\n\n  // const baseUri = await contract.baseURI();\n  // const tokenUri = convertIpfsUri(`${baseUri}${tokenId.toString()}`);\n  const name = await contract.getNickName(tokenId);\n\n  metadata = {\n    image: `ipfs://${getImgBase()}/${tokenId.toString()}.png`,\n    name\n  }\n\n  // metadata = await request(\n  //   tokenUri,\n  //   'GET',\n  //   undefined,\n  //   undefined,\n  //   100000 // 100sec timeout\n  // ) as NFTMetadata;\n  metadata.image = convertIpfsUri(metadata.image);\n\n  logger.debug(`Token #${tokenId.toString()} metadata`, metadata);\n\n  return {\n    id: tokenId.toNumber(),\n    image: metadata.image,\n    name: metadata.name,\n    description: metadata.description,\n    attributes: metadata.attributes\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { TokenData } from '../types';\nimport * as regexp  from '../utils/regexp';\nimport { getTokenById } from './getTokenById';\n\n// Returns tokens that owned by the address\nexport const getOwnedTokens = async (\n  contract: CCBaseContract,\n  ownerAddress: string\n): Promise<TokenData[] | []> => {\n\n  if (!regexp.ethereumAddress.exec(ownerAddress)) {\n    throw new Error('getOwnedTokens: Invalid owner address');\n  }\n\n  let balance: BigNumber | number  = await contract['balanceOf(address)'](ownerAddress);\n\n  if (balance.eq(0)) {\n    return [];\n  }\n\n  balance = balance.toNumber();\n\n  const tokens: TokenData[] = [];\n\n  for (let i=0; i<balance; i++) {\n    const tokenId = await contract['tokenOfOwnerByIndex(address,uint256)'](\n      ownerAddress,\n      i\n    );\n    const token = await getTokenById(contract, tokenId);\n\n    if (!token) {\n      throw new Error(`getOwnedTokens: Unable to fetch token with Id: ${tokenId}`);\n    }\n\n    tokens.push(token);\n  }\n\n  return tokens;\n};\n","import type { CryptoCossacks2022 as CryptoCossacksContract } from '@crypto-cossacks/token/typechain';\nimport type {\n  ContractReceipt,\n  Signer,\n  BigNumber,\n  CallOverrides,\n  PayableOverrides\n} from 'ethers';\nimport { BigNumber as BN, Signer as SignerObject } from 'ethers';\n\nexport type MethodOverrides = CallOverrides | PayableOverrides;\n\nexport type TxHashCallbackFn = (txHash: string) => void;\n\nexport const sendHelper = async (\n  contract: CryptoCossacksContract,\n  method: string,\n  args: unknown[],\n  sender: Signer,\n  overrides?: MethodOverrides,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  transactionHashCb?: TxHashCallbackFn,\n  confirmations = 1\n): Promise<ContractReceipt> => {\n\n  if (sender instanceof SignerObject === false) {\n    throw new Error('Invalid transaction signer');\n  }\n\n  // Assign sender as a Signer\n  const contractWithSigner = contract.connect(sender);\n\n  // Add overrides to arguments\n  if (overrides) {\n    args.push(overrides);\n  }\n\n  // Transaction gas estimation\n  const gasAmount: BigNumber = await contractWithSigner\n    .estimateGas[method](...args);\n\n  // Validate available gas\n  if (overrides && overrides.gasPrice) {\n    const balance = await sender.getBalance();\n\n    if (!BN.isBigNumber(overrides.gasPrice)) {\n      overrides.gasPrice = BN.from(overrides.gasPrice);\n    }\n\n    if (overrides.gasPrice.mul(gasAmount).gt(balance)) {\n      throw new Error('Insufficient gas or always failing transaction');\n    }\n  }\n\n  // Send transaction\n  const tx = await contractWithSigner[method](...args);\n\n  if (typeof transactionHashCb === 'function') {\n    transactionHashCb(tx.hash);\n  }\n\n  // Wait for specified number of tx confirmations\n  return await tx.wait(confirmations);\n}\n","import type { providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { MethodOverrides, TxHashCallbackFn } from '../utils/sendHelper';\nimport type { TokenData } from '../types';\nimport { getTokenById } from './getTokenById'\nimport { sendHelper } from '../utils/sendHelper';\nimport Logger from '../../utils/logger';\n\n// Initialize logger\nconst logger = Logger('mintToken');\n\n// Mint a token\nexport const mintToken = async (\n  contract: CCBaseContract,\n  tokenId: number | string,\n  overrides: MethodOverrides,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  transactionHashCb: TxHashCallbackFn,\n  confirmations = 1\n): Promise<TokenData> => {\n\n  if (await getTokenById(contract, tokenId)) {\n    throw new Error(`Token #${tokenId} is already minted`);\n  }\n\n  overrides = overrides ? overrides : {};\n  logger.debug('Overrides:', overrides);\n\n  const owner = (contract.provider as providers.Web3Provider).getSigner();\n\n  await sendHelper(\n    contract,\n    'mint(uint256)',\n    [\n      tokenId\n    ],\n    owner,\n    overrides,\n    transactionHashCb,\n    confirmations\n  );\n\n  return getTokenById(contract, tokenId);\n};\n","import type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\nexport const isPaused = async (\n  contract: CCBaseContract\n): Promise<boolean> => contract.isPaused();\n","import type { BigNumber, providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport { BigNumber as BN } from 'ethers';\n\n// Estimate token minting\nexport const estimateMinting = async (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<BigNumber> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  const value = await contract.getPrice();\n  const sender = (contract.provider as providers.Web3Provider).getSigner();\n  const contractWithSigner = contract.connect(sender);\n\n  return contractWithSigner\n    .estimateGas.mint(\n      tokenId,\n      {\n        value,\n      }\n    );\n};\n","import type { providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\nexport const isFounder = async (\n  contract: CCBaseContract\n): Promise<boolean> => {\n\n  const signer = (contract.provider as providers.Web3Provider).getSigner();\n  const address = await signer.getAddress();\n\n  return contract.isFounder(address);\n};\n","import type { BigNumber, providers } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport type { MethodOverrides, TxHashCallbackFn } from './utils/sendHelper';\nimport type { TokenData } from './types';\nimport { ethers } from 'ethers';\nimport {\n  CryptoCossacks as CCossacksContract\n} from '@crypto-cossacks/token';\nimport * as regexp  from './utils/regexp';\n\n// Token methods:\n// getTokens(cursor: number, count: number, includeMinted: boolean): Promise<TokenData[]>\n\nimport { getTokenById } from './api/getTokenById';\nimport { getTokenMetadataById } from './api/getTokenMetadataById';\nimport { getOwnedTokens } from './api/getOwnedTokens';\nimport { isTokenMintable } from './api/isTokenMintable';\nimport { mintToken } from './api/mintToken';\nimport { isPaused } from './api/isPaused';\nimport { getPrice } from './api/getPrice';\nimport { estimateMinting } from './api/estimateMinting';\nimport { isFounder } from './api/isFounder';\nimport { getNickName } from './api/getNickName';\n\nexport type KnownProvider =\n  | providers.ExternalProvider\n  | providers.JsonRpcProvider\n  | providers.Web3Provider\n  | providers.Provider\n  | string;\n\nexport class CCContract {\n  readonly address: string;\n  readonly provider: providers.Provider;\n  readonly contract: CCBaseContract;\n\n  constructor(\n    contractAddress: string,\n    providerOrUri: KnownProvider\n  ) {\n\n    if (regexp.ethereumAddress.exec(contractAddress)) {\n      this.address = contractAddress;\n    } else {\n      throw new Error(\n        `cryptoCossacksContract: Invalid smart contract address: ${contractAddress}`\n      );\n    }\n\n    if (typeof providerOrUri === 'string' && providerOrUri !== '') {\n      this.provider = new ethers.providers.JsonRpcProvider(providerOrUri);\n    } else if (typeof providerOrUri === 'object') {\n\n      if ((providerOrUri as providers.ExternalProvider).isMetaMask) {\n        // using window.ethereum provided as providerOrUri\n        this.provider = new ethers.providers.Web3Provider(\n          providerOrUri as providers.ExternalProvider\n        );\n      } else if (typeof (providerOrUri as providers.JsonRpcProvider).send === 'function') {\n        // using raw provider\n        this.provider = providerOrUri as providers.JsonRpcProvider;\n      }\n    }\n\n    if (!this.provider) {\n      throw new Error(\n        `cryptoCossacksContract: Unable to initialize provider': ${providerOrUri}`\n      );\n    }\n\n    this.contract = new ethers.Contract(\n      this.address,\n      CCossacksContract.abi,\n      this.provider\n    ) as unknown as CCBaseContract;\n  }\n\n  // Returns a token information\n  getTokenById(\n    tokenId: number | string | BigNumber\n  ): Promise<TokenData | null> {\n    return getTokenById(this.contract, tokenId);\n  }\n\n  // Returns a token information (not minted token)\n  getTokenMetadataById(\n    tokenId: number | string | BigNumber\n  ): Promise<TokenData | null> {\n    return getTokenMetadataById(this.contract, tokenId);\n  }\n\n  // Check is token mintable\n  isTokenMintable(\n    tokenId: number | string | BigNumber\n  ): Promise<boolean> {\n    return isTokenMintable(this.contract, tokenId);\n  }\n\n  // Return all the tokens that owned by an address\n  getOwnedTokens(\n    ownerAddress: string\n  ): Promise<TokenData[] | []> {\n    return getOwnedTokens(this.contract, ownerAddress);\n  }\n\n  // Mint token\n  mintToken(\n    tokenId: number | string,\n    overrides: MethodOverrides,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    transactionHashCb: TxHashCallbackFn,\n    confirmations: number\n  ): Promise<TokenData> {\n    return mintToken(this.contract, tokenId, overrides, transactionHashCb, confirmations);\n  }\n\n  // Check is contract is paused\n  isPaused(): Promise<boolean> {\n    return isPaused(this.contract);\n  }\n\n  // Get configured token price\n  getPrice(): Promise<BigNumber> {\n    return getPrice(this.contract);\n  }\n\n  // Estimate minting\n  estimateMinting(\n    tokenId: number | string\n  ): Promise<BigNumber> {\n    return estimateMinting(this.contract, tokenId);\n  }\n\n  // Check is current account is the founder\n  isFounder(): Promise<boolean> {\n    return isFounder(this.contract);\n  }\n\n  getNickName(tokenId: number | string): Promise<string> {\n    return getNickName(this.contract, tokenId);\n  };\n}\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\nimport { BigNumber as BN } from 'ethers';\n\n// Check is token mintable\nexport const isTokenMintable = (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<boolean> => {\n\n  if (!BN.isBigNumber(tokenId)) {\n    tokenId = BN.from(tokenId);\n  }\n\n  return contract.isTokenMintable(tokenId);\n};\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\n// Check is token mintable\nexport const getPrice = (\n  contract: CCBaseContract\n): Promise<BigNumber> => contract.getPrice();\n","import type { BigNumber } from 'ethers';\nimport type { CryptoCossacks2022 as CCBaseContract } from '@crypto-cossacks/token/typechain';\n\n// Get cossack name\nexport const getNickName = (\n  contract: CCBaseContract,\n  tokenId: number | string | BigNumber\n): Promise<string> => contract.getNickName(tokenId);\n","import type { ReactNode } from 'react';\nimport type { Web3ModalConfig } from '../hooks/useWeb3Modal';\nimport { createContext, useContext, useEffect } from 'react';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport Logger from '../utils/logger';\nimport { useAppReducer } from './reducer';\n\n// Custom hooks\nimport { useWeb3Modal } from '../hooks/useWeb3Modal';\nimport { useNetworkId } from '../hooks/useNetworkId';\nimport { useAccount } from '../hooks/useAccount';\nimport { useToken } from '../hooks/useToken';\nimport { useIsPaused } from '../hooks/useIsPaused';\n\n// Config\nimport {\n  getDefaultNetwork,\n  getNetworksIds,\n  getInfuraId,\n  getTokenAddress\n} from '../config';\n\n// Initialize logger\nconst logger = Logger('Store');\n\nexport type AppReducerType = ReturnType<typeof useAppReducer>;\nexport type State = AppReducerType[0];\nexport type Dispatch = AppReducerType[1];\n\nexport const StateContext = createContext<State | null>(null);\nexport const DispatchContext = createContext<Dispatch | null>(null);\n\nexport interface PropsType {\n  children: ReactNode;\n}\n\nexport const useAppState = () => {\n  const ctx = useContext(StateContext);\n\n  if (!ctx) {\n    logger.error('Missing state context');\n    throw new Error('Missing state context');\n  }\n\n  return ctx;\n};\n\nexport const useAppDispatch = () => {\n  const ctx = useContext(DispatchContext);\n\n  if (!ctx) {\n    logger.error('Missing dispatch context');\n    throw new Error('Missing dispatch context');\n  }\n\n  return ctx;\n}\n\nconst defaultNetwork = getDefaultNetwork();\nconst allowedNetworksIds = getNetworksIds();\nconst tokenAddress = getTokenAddress();\n\n// Web3Modal initialization\nconst web3ModalConfig: Web3ModalConfig = {\n  network: defaultNetwork.name,\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId: getInfuraId()\n      }\n    }\n  }\n};\n\nexport const AppStateProvider = ({ children }: PropsType) => {\n  const [state, dispatch] = useAppReducer();\n  const [\n    provider,\n    injectedProvider,\n    isConnecting,\n    signIn,\n    signOut,\n    web3ModalError\n  ] = useWeb3Modal(web3ModalConfig);\n  const [\n    networkId,\n    isNetworkIdLoading,\n    isRightNetwork,\n    networkError\n  ] = useNetworkId(provider, allowedNetworksIds);\n  const [account, isAccountLoading, accountError] = useAccount(provider);\n  const [token, tokenError] = useToken(provider, tokenAddress);\n  const [isPaused, isPausedError] = useIsPaused(token);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_IS_ENABLED',\n      payload: !!provider && isRightNetwork && !!account && !!token\n    });\n  }, [dispatch, provider, isRightNetwork, account, token]);\n\n  useEffect(() => {\n    if (web3ModalError) {\n\n    }\n    if (networkError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: networkError\n      });\n    }\n    if (accountError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: accountError\n      });\n    }\n    if (tokenError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: tokenError\n      });\n    }\n    if (isPausedError) {\n      dispatch({\n        type: 'ERROR_ADD',\n        payload: isPausedError\n      });\n    }\n  }, [dispatch, web3ModalError, networkError, accountError, tokenError, isPausedError]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_CONNECTING',\n      payload: isConnecting || isNetworkIdLoading || isAccountLoading\n    })\n  }, [dispatch, isConnecting, isNetworkIdLoading, isAccountLoading]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_ACCOUNT',\n      payload: account\n    })\n  }, [dispatch, account]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_IS_RIGHT_NETWORK',\n      payload: isRightNetwork\n    })\n  }, [dispatch, isRightNetwork]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_NETWORK_ID',\n      payload: networkId\n    })\n  }, [dispatch, networkId]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_PROVIDER',\n      payload: provider\n    })\n  }, [dispatch, provider]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_INJECTED_PROVIDER',\n      payload: injectedProvider\n    })\n  }, [dispatch, injectedProvider]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_WEB3MODAL_FUNCTIONS',\n      payload: {\n        signIn,\n        signOut\n      }\n    })\n  }, [dispatch, signIn, signOut]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_TOKEN',\n      payload: token\n    })\n  }, [dispatch, token]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_MINTING_PAUSED',\n      payload: isPaused\n    })\n  }, [dispatch, isPaused]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        {children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n","import type { Web3ModalProvider } from './useWeb3Modal';\nimport { useState, useEffect } from 'react';\nimport { CCContract } from '../contractLib';\n\nexport type UseTokenHook = [\n  token: CCContract,\n  error: string | null\n];\n\nexport const useToken = (\n  provider: Web3ModalProvider | undefined,\n  contractAddress: string\n): UseTokenHook => {\n  const [token, setToken] = useState<CCContract | undefined>();\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!provider) {\n      return setToken(undefined);\n    }\n\n    try {\n      setError(null);\n      setToken(new CCContract(contractAddress, provider));\n    } catch (err) {\n\n      if (!err.message) {\n        setError('Unknown error');\n      }\n\n      setError(err.message)\n    }\n\n  }, [contractAddress, provider]);\n\n  return [token, error];\n};\n","import type { CCContract } from '../contractLib';\nimport { useState, useEffect } from 'react';\n\nexport type UseIsPausedHook = [\n  isPaused: boolean,\n  error: string | undefined\n];\n\nexport const useIsPaused = (token: CCContract): UseIsPausedHook => {\n  const [isPaused, setIsPaused] = useState<boolean>(false);\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    const resetState = () => {\n      setError(undefined);\n      setIsPaused(false);\n    };\n\n    const checkIsPaused = async () => {\n      try {\n        if (token) {\n          const paused = await token.isPaused();\n          setIsPaused(paused);\n        } else {\n          resetState();\n        }\n      } catch (error) {\n        setError(error.message || 'Unknown error');\n        resetState();\n      }\n    };\n\n    checkIsPaused();\n  }, [token]);\n\n  return [isPaused, error];\n};\n","import type { MouseEventHandler } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface IconButtonWrapperProps {\n  size: string;\n  color?: string;\n  backgroundColor?: string;\n}\n\nexport interface RefreshButtonProps {\n  refresh: MouseEventHandler;\n  refreshing: boolean;\n}\n\nexport interface MintButtonProps {\n  label: string;\n  loading: boolean;\n  disabled: boolean;\n  large?: boolean;\n  onClick(): void;\n}\n\nexport interface IconButtonProps {\n  size: string;\n  icon: string;\n  spin: boolean;\n  color?: string,\n  backgroundColor?: string;\n  disabled?: boolean;\n  onClick(): void;\n}\n\nexport interface ButtonLabelProps {\n  mr: boolean;\n}\n\nexport interface GreenButtonProps {\n  large?: boolean;\n}\n\nexport const Button = styled.button`\n  padding: 0;\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.dark});\n  cursor: pointer;\n`;\n\nexport const RedButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 24px;\n  border-radius: 8px;\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  cursor: pointer;\n  font-family: ${fonts.family.Ukraine};\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.bold};\n\n  @media (max-width: ${responsive.md}) {\n    padding: 6px 10px;\n    font-size: ${fonts.size.small};\n    font-weight: ${fonts.weight.medium};\n  }\n`;\n\nexport const ConnectButton = styled(RedButton)`\n  /* margin: 40% auto auto auto; */\n`;\n\nexport const GreenButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 12px 24px;\n\n  ${({ large }: GreenButtonProps) => large ? 'padding: 24px 48px;' : '' }\n\n  margin-top: 20px;\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  border-radius: 8px;\n  cursor: pointer;\n\n  @media (max-width: ${responsive.md}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ButtonLabelWrapper = styled.div.attrs(\n  (props: ButtonLabelProps) => ({\n    mr: props.mr,\n  })\n)`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  margin-right: ${({ mr }) => mr ? '8px' : '0'};\n`;\n\nexport const IconButtonWrapper = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  color: rgb(${colors.red});\n  background-color: rgb(${colors.white});\n  padding: 5.1px;\n  border: 1px solid rgb(${colors.red});\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  margin-left: 8px;\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    &:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nexport const ControlButton = ({ icon, size, disabled, onClick }) => (\n  <IconButtonWrapper disabled={disabled} onClick={onClick}>\n    <div>\n      <FontAwesomeIcon icon={icon} size={size} />\n    </div>\n  </IconButtonWrapper>\n);\n\nexport const ControlButtonWrapper = styled.div`\n  padding: 4px;\n  margin-right: 4px;\n  color: rgb(${colors.red});\n`;\n\nexport const RefreshButtonWrapper = styled(RedButton)`\n  background-color: none;\n`;\n\nexport const RefreshButton = ({ refresh, refreshing }: RefreshButtonProps) => (\n  <FontAwesomeIcon\n    onClick={refresh}\n    icon='sync-alt'\n    size='2x'\n    spin={refreshing}\n    color='white'\n  />\n);\n\nexport const MintButton = ({ label, loading, onClick, ...props }: MintButtonProps) => (\n  <GreenButton onClick={onClick} {...props}>\n    <ButtonLabelWrapper mr={loading}>\n      {label}\n    </ButtonLabelWrapper>\n    {loading &&\n      <div>\n        <FontAwesomeIcon icon='sync-alt' spin={loading} />\n      </div>\n    }\n  </GreenButton>\n);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { useAppState } from '../../store';\nimport { ConnectButton } from './index';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport const SignOutButtonWrapper = styled.button`\n  font-size: ${fonts.size.h5};\n  color: rgb(${colors.white});\n  border: none;\n  background-color: rgb(${colors.blueblack});\n  margin-left: 12px;\n\n  @media (max-width: ${responsive.md}) {\n    margin-left: 0;\n  }\n`;\n\nexport const LabelDesc = styled.span`\n  @media (max-width: ${responsive.md}) {\n    display: none;\n  }\n`;\n\nexport const LabelMob = styled.span`\n  display: none;\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n  }\n`;\n\nexport const SignInButton = () => {\n  const { isConnecting, account, signIn } = useAppState();\n\n  if (isConnecting || account) {\n    return null;\n  }\n\n  return (\n    <ConnectButton\n      onClick={() => signIn()}\n      disabled={isConnecting}\n    >\n      <LabelDesc>\n        Connect wallet\n      </LabelDesc>\n      <LabelMob>\n        Connect\n      </LabelMob>\n    </ConnectButton>\n  )\n};\n\nexport const SignOutButton = () => {\n  const { isConnecting, account, signOut } = useAppState();\n\n  if (!account && !isConnecting) {\n    return null;\n  }\n\n  return (\n    <SignOutButtonWrapper\n      onClick={() => signOut()}\n      disabled={isConnecting}\n    >\n      {\n        isConnecting\n          ? <FontAwesomeIcon icon='sync-alt' spin />\n          : <FontAwesomeIcon icon='sign-out-alt' />\n      }\n    </SignOutButtonWrapper>\n  )\n};\n","// Makes shorter text with ellipsis in the center\nexport const centerEllipsis = (text: string, width = 4): string =>\n  text\n    ? text.length > ((width * 2) + 3)\n      ? `${text.substring(0, width + 2)}...${text.substring(-width, width)}`\n      : text\n    : '';\n\n// Copies text to clipboard\nexport const copyToClipboard = (text: string): Promise<void> =>\n  navigator\n    .clipboard\n    .writeText(text)\n    .then(resolve => resolve);\n","import Blockies from 'react-blockies';\nimport styled from 'styled-components';\nimport { centerEllipsis, copyToClipboard } from '../utils/strings';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface AccountProps {\n  account?: string;\n}\n\nconst AccountWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AccountIconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AccountIcon = styled(Blockies)`\n  border: 2px solid rgb(${colors.white});\n  border-radius: 50%;\n`;\n\nconst AccountHash = styled.div`\n  margin-left: 6px;\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n  cursor: pointer;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.tiny};\n  }\n`;\n\nexport const Account = ({ account }: AccountProps) => {\n\n  if (!account) {\n    return null;\n  }\n\n  return (\n    <AccountWrapper>\n      <AccountIconWrapper>\n        <AccountIcon\n          seed={account}\n          size={7}\n          scale={3}\n        />\n      </AccountIconWrapper>\n      <AccountHash\n        onClick={() => copyToClipboard(account)}\n      >\n        {centerEllipsis(account)}\n      </AccountHash>\n    </AccountWrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport Logger from '../utils/logger';\n\n// Initialize logger\nconst logger = Logger('usePoller');\n\nexport type PollerContextFunction = () => void | Promise<void>;\n\n// usePoller react hook\nexport const usePoller = (\n  fn: PollerContextFunction,\n  enabled = true,\n  interval = 5000,\n  pollerName?: string\n) => {\n  if (typeof fn !== 'function') {\n    throw new TypeError('Can\\'t poll without a callback function');\n  }\n\n  return useEffect(\n    () => {\n      let disabled = false;\n      let failures = 0;\n\n      const poll = async () => {\n        if (disabled) {\n          return;\n        }\n\n        try {\n          await fn();\n        } catch (error) {\n          failures++;\n          logger.error(error);\n        }\n\n        if (failures < 100) {\n          setTimeout(poll, interval);\n        } else {\n          logger.debug(`Too much errors in poller ${pollerName}. Disabled`);\n        }\n      }\n\n      poll();\n      logger.debug(`Poller ${pollerName} started`);\n\n      return () => {\n        disabled = true;\n        failures = 0;\n        logger.debug(`Poller ${pollerName} stopped`);\n      };\n    },\n    [fn, enabled, interval, pollerName]\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n","import type { TokenData } from '../../contractLib/types';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface TokenCardProps {\n  token: TokenData;\n  onClick?(): void;\n}\n\nexport interface TokenImageProps {\n  src: string;\n  width?: string;\n  height?: string;\n}\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 0 20px 0;\n`;\n\nexport const ImageWrapperInner = styled.div`\n  border: 1px solid rgb(145, 145, 145);\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TokenCardWrapper = styled.div`\n  display: inline-block;\n  padding: 4px;\n  background-color: rgb(${colors.white});\n  margin-right: 17px;\n  margin-bottom: 20px;\n  vertical-align: middle;\n  border-radius: 8px;\n\n  ${({ onClick }) =>\n    onClick !== undefined\n      ? 'cursor: pointer;'\n      : ''\n  }\n\n  /* &:nth-child(6n) {\n    margin-right: 0;\n  } */\n\n  @media (max-width: ${responsive.md}) {\n    &:nth-child(2n) {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const TokenId = styled.div`\n  font-size: ${fonts.size.tiny};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.black});\n  margin-bottom: 4px;\n`;\n\nexport const TokenImage = styled.div`\n  width: ${({ width }) => !!width ? width : '139px'};\n  height: ${({ height }) => !!height ? height : '139px'};\n  position: relative;\n\n  &:before {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-image: url(${({ src }: TokenImageProps) => src});\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    content: \"\";\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  &:after {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: rgb(${colors.lightgrey});\n    font-size: ${fonts.size.tiny};\n    content: \"Loading from IPFS...\";\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    width: ${({ width }) => !!width ? width : 'calc(50vw - 40px)'};\n    height: ${({ height }) => !!height ? height : 'calc(50vw - 40px)'};\n  }\n`;\n\nexport const TokenCard = ({ token, ...props }: TokenCardProps) => (\n  <TokenCardWrapper {...props}>\n    <TokenId>#{token.id}</TokenId>\n    <TokenImage src={token.image} />\n  </TokenCardWrapper>\n);\n\nexport const TokenMintCard = ({ token }: TokenCardProps) => (\n  <ImageWrapper>\n    <ImageWrapperInner>\n      <TokenImage src={token.image} width='250px' height='250px' />\n    </ImageWrapperInner>\n  </ImageWrapper>\n);\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface BlockTitleProps {\n  center?: boolean;\n}\n\nexport const BlockTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n  margin-bottom: 10px;\n  text-transform: uppercase;\n\n  ${({ center }: BlockTitleProps) => center ? 'align-self: center;' : ''}\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.small};\n  }\n`;\n","import React, { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { colors, fonts, responsive } from '../../styles';\n\nexport interface PortalProps {\n  children: React.ReactNode;\n  onClose: Function;\n}\n\nexport interface ModalProps {\n  title?: string;\n  children: React.ReactNode;\n  show: boolean;\n  onClose: Function;\n}\n\nconst Portal = ({\n  children,\n  onClose = () => {}\n}: PortalProps) => {\n  const closeOnEscapeKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Escape' || e.keyCode === 27) {\n      onClose();\n    }\n  }, [onClose]);\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', closeOnEscapeKeyDown);\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEscapeKeyDown);\n    };\n  }, [closeOnEscapeKeyDown]);\n\n  return createPortal(children, document.getElementById('root'));\n};\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: rgb(${colors.dark});\n  z-index: 99999;\n`;\n\nconst ModalContent = styled.div`\n  width: 500px;\n  background-color: rgb(${colors.blueblack});\n\n  @media (max-width: ${responsive.md}) {\n    width: 99%;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  padding: 10px;\n`;\n\nconst ModalTitle = styled.div`\n  margin: 0;\n`;\n\nconst ModalBody = styled.div`\n  padding: 10px;\n  border: 1px solid rgb(${colors.lightgrey});\n  color: rgb(${colors.white});\n`;\n\nconst ModalFooter = styled.div`\n  padding: 10px;\n`;\n\nconst CloseBtn = styled.button`\n  padding: 12px 18px;\n  /* border: 1px solid rgb(${colors.red}); */\n  background-color: rgb(${colors.white});\n  color: rgb(${colors.blueblack});\n  cursor: pointer;\n  font-family: ${fonts.family.Ukraine};\n  font-size: ${fonts.size.small};\n  font-weight: ${fonts.weight.medium};\n  border-radius: 6px;\n`;\n\nexport const Modal = ({\n  title,\n  children,\n  show = false,\n  onClose = () => {}\n}: ModalProps) => {\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <Portal onClose={onClose}>\n      <ModalWrapper onClick={() => onClose()}>\n        <ModalContent onClick={e => e.stopPropagation()}>\n          {title &&\n            <ModalHeader>\n              <ModalTitle>{title}</ModalTitle>\n            </ModalHeader>\n          }\n          <ModalBody>\n            {children}\n          </ModalBody>\n          <ModalFooter>\n            <CloseBtn onClick={() => onClose()}>\n              Close\n            </CloseBtn>\n          </ModalFooter>\n        </ModalContent>\n      </ModalWrapper>\n    </Portal>\n  );\n};\n","import type { CCContract } from '../../contractLib';\nimport type { TokenData } from '../../contractLib/types';\nimport styled from 'styled-components';\nimport { useState, useCallback, useEffect } from 'react';\nimport { usePoller } from '../../hooks/usePoller';\nimport { useError } from '../../hooks/useError';\nimport { Container } from '../Layout/Container';\nimport { TokenCard } from '../Layout/TokenCard';\nimport { BlockTitle } from '../Typography/BlockTitle';\nimport { RefreshButton } from '../buttons';\nimport { Modal } from '../Modal';\nimport { responsive } from '../../styles';\nimport Logger from '../../utils/logger';\nimport { useAppDispatch } from '../../store';\nimport { colors } from '../../styles';\n\n// Initialize logger\nconst logger = Logger('MyTokens');\n\nexport interface MyTokensProps {\n  token: CCContract,\n  account?: string,\n  pollInterval?: number\n}\n\nexport interface TokenImageProps {\n  src: string;\n  width?: string;\n  height?: string;\n}\n\nexport interface TokensData {\n  [account: string]: TokenData[]\n}\n\nexport const TokenCardsWrapper = styled.div`\n  display: block;\n`;\n\nexport const RefreshBtnWrapper = styled.div`\n  display: inline-block;\n  margin-bottom: 20px;\n  vertical-align: middle;\n  cursor: pointer;\n\n  /* @media (max-width: ${responsive.md}) {\n    width: 100%;\n    margin: 0;\n    text-align: center;\n  } */\n`;\n\nconst RefreshBtnInner = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 145px;\n  height: 167px;\n  background-color: rgb(${colors.grey});\n  border-radius: 8px;\n`;\n\nexport const TokenClickArea = styled.div`\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const TokenImage = styled.div`\n  width: 480px;\n  height: 480px;\n  background-image: url(${({ src }: TokenImageProps) => src});\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (max-width: ${responsive.md}) {\n    width: 100%;\n    height: 400px;\n  }\n`;\n\nexport const MyTokens = (\n  {\n    token,\n    account,\n    pollInterval = 10000\n  }: MyTokensProps\n) => {\n  const setError = useError();\n  const dispatch = useAppDispatch();\n  const [refreshing, setRefreshing] = useState<boolean>(false);\n  const [ownedTokens, setOwnedTokens] = useState<TokensData>({});\n  const [details, setDetails] = useState<TokenData | undefined>();\n\n  const getOwnedTokens = useCallback(\n    async () => {\n      try {\n        setRefreshing(true);\n        const newOwnedTokens = await token.getOwnedTokens(account);\n        logger.debug('Owned tokens', account, newOwnedTokens);\n        setOwnedTokens(ownedTokensState => ({\n          ...ownedTokensState,\n          [account]: newOwnedTokens\n        }));\n        dispatch({\n          type: 'SET_IS_OWN_TOKENS',\n          payload: newOwnedTokens && newOwnedTokens.length > 0\n        });\n        setRefreshing(false);\n      } catch (err) {\n        setRefreshing(false);\n        setError(err.message || 'Unknown error');\n      }\n    },\n    [token, account, setError, dispatch]\n  );\n\n  useEffect(\n    () => {\n      setOwnedTokens({});\n    },\n    [token, account]\n  );\n\n  usePoller(\n    getOwnedTokens,\n    account !== undefined,\n    pollInterval,\n    `getOwnedTokens for account: ${account}`\n  );\n\n  if (!token || ownedTokens[account] === undefined || ownedTokens[account].length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <BlockTitle>\n        My own tokens\n      </BlockTitle>\n      <TokenCardsWrapper>\n        {ownedTokens[account].map(\n          (t: TokenData, i: number) => (\n            <TokenCard\n              key={i}\n              token={t}\n              onClick={() => setDetails(t)}\n            />\n          )\n        )}\n        <RefreshBtnWrapper>\n          <RefreshBtnInner onClick={getOwnedTokens}>\n            <RefreshButton\n              refresh={getOwnedTokens}\n              refreshing={refreshing}\n            />\n          </RefreshBtnInner>\n        </RefreshBtnWrapper>\n      </TokenCardsWrapper>\n      <Modal\n        show={details !== undefined}\n        onClose={() => setDetails(undefined)}\n      >\n        {details !== undefined &&\n          <>\n            <div>\n              #{details.id} {details.name}\n            </div>\n            <TokenImage src={details.image} />\n          </>\n        }\n      </Modal>\n    </Container>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAppDispatch } from '../store';\n\nexport type UseErrorCallback = (error: string) => void;\n\nexport const useError = (): UseErrorCallback => {\n  const dispatch = useAppDispatch();\n  return useMemo(() => (error: string): void => dispatch({\n    type: 'ERROR_ADD',\n    payload: error\n  }), [dispatch]);\n};\n","import styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useAppState } from '../store';\nimport { colors, fonts } from '../styles';\n\nexport interface CheckedWrapper {\n  selected?: boolean;\n}\n\nexport interface CheckedToken {\n  tokenId: number;\n  selected?: boolean;\n  paused?: boolean;\n  available: boolean;\n  founder?: boolean;\n}\n\nexport interface AvailChipProps {\n  token: CheckedToken;\n  selected?: boolean;\n  isFounder?: boolean;\n  onClick?: () => void\n}\n\nexport const ChipWrapper = styled.div<CheckedWrapper>`\n  display: inline-block;\n  margin-right: 10px;\n  padding: 10px;\n  background-color: #363636;\n  border-radius: 10px;\n\n  ${\n    ({ selected }: CheckedWrapper) => selected\n      ? `\n        border: solid 1px rgb(${colors.white});\n      `\n      : ''\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  margin-left: 8px;\n`;\n\nexport const Chip = styled.div<CheckedToken>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n\n  ${\n    ({ available, paused, founder }: CheckedToken) => available && (!paused || (paused && founder))\n      ? `\n        color: rgb(${colors.white});\n        text-decoration: underline;\n        cursor: pointer;\n      `\n      : `\n        color: rgb(${colors.red});\n        text-decoration: none;\n      `\n  }\n\n  ${\n    ({ selected }: CheckedToken) => selected\n      ? `\n        font-weight: ${fonts.weight.bold};\n        text-decoration: none;\n        cursor: not-allowed;\n      `\n      : ''\n  }\n`;\n\nexport const AvailChip = ({\n  token,\n  selected,\n  isFounder,\n  onClick = () => {}\n}: AvailChipProps) => {\n  const {\n    isMintingPaused\n  } = useAppState();\n\n  return (\n    <ChipWrapper selected={selected}>\n      <Chip\n        {...token}\n        selected={selected}\n        paused={isMintingPaused}\n        founder={isFounder}\n        title={\n          token.available\n            ? isMintingPaused && !isFounder\n              ? 'public minting not opened yet'\n              : 'available for minting'\n            : 'not available'\n        }\n        onClick={\n          onClick\n          // isMintingPaused && (token.available || selected)\n          //   ? onClick\n          //   : () => {}\n        }\n      >\n        <div>\n          {token.tokenId}\n        </div>\n        {(!token.available || (isMintingPaused && !isFounder)) &&\n          <IconWrapper>\n            <FontAwesomeIcon icon='ban' />\n          </IconWrapper>\n        }\n      </Chip>\n    </ChipWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { colors, fonts } from '../styles';\n\nexport const ErrorMessageWrapper = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.red});\n  margin: 20px 0 20px 0;\n  padding: 10px;\n  background-color: rgb(${colors.light});\n  border-radius: 8px;\n`;\n\nexport const ErrorMessage = ({ message }) => {\n\n  if (!message || message === '') {\n    return null;\n  }\n\n  return (\n    <ErrorMessageWrapper>\n      {message}\n    </ErrorMessageWrapper>\n  );\n}\n","import type { BigNumber } from 'ethers';\nimport type { CCContract } from '../../contractLib';\nimport type { TokenData } from '../../contractLib/types';\nimport type { Web3ModalProvider } from '../../hooks/useWeb3Modal';\nimport { useState, useCallback, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { utils as ethersUtils } from 'ethers';\nimport { TokenMintCard } from '../Layout/TokenCard';\nimport { BlockTitle } from '../Typography/BlockTitle';\nimport { MintButton } from '../buttons';\nimport { ErrorMessage } from '../ErrorMessage';\nimport { colors, fonts, responsive } from '../../styles';\nimport { centerEllipsis } from '../../utils/strings';\nimport { getDefaultNetwork } from '../../config';\n// import Logger from '../../utils/logger';\n\n// Initialize logger\n// const logger = Logger('MintCard');\n\n// Config\nconst defaultNetwork = getDefaultNetwork();\n\nexport interface MintCardProps {\n  token: CCContract;\n  provider: Web3ModalProvider;\n  tokenId: number;\n  tokenPrice: BigNumber;\n}\n\nexport interface TitleProps {\n  large?: boolean;\n}\n\nexport const CheckerBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  /* padding: 16px; */\n  /* background-color: rgb(${colors.white}); */\n  margin-top: 40px;\n  width: 100%;\n  max-width: 570px;\n`;\n\nexport const TokenCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${responsive.md}) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const PriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  align-self: flex-start;\n`;\n\nexport const PriceTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.lightgrey});\n  margin-right: 4px;\n  margin-bottom: 4px;\n  align-self: flex-start;\n\n  ${({ large }: TitleProps) => large ? `font-size: ${fonts.size.large};` : ''}\n`;\n\nexport const PriceValue = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.white});\n`;\n\nexport const MinButtonWrapper = styled.div`\n  @media (max-width: ${responsive.md}) {\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n  }\n`;\n\nexport const TxBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n`;\n\nexport const TxTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.lightgrey});\n  margin-bottom: 4px;\n`;\n\nexport const TxHashValue = styled.a`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.white});\n  text-decoration: underline;\n`;\n\nexport const fetchTokenMeta = async (\n  token: CCContract,\n  tokenId: number\n) => {\n  const isAvailable = await token.isTokenMintable(tokenId);\n\n  if (!isAvailable) {\n    throw new Error(`Token #${tokenId} is not available for minting`);\n  }\n\n  const metadata = await token.getTokenMetadataById(tokenId);\n  // const estimation = await token.estimateMinting(tokenId);\n  return { metadata };// , estimation\n};\n\nexport const MintCard = ({ token, provider, tokenId, tokenPrice }: MintCardProps) => {\n  const [tokenMetadata, setTokenMetadata] = useState<TokenData | undefined>();\n  // const [gasEstimation, setGasEstimation] = useState<BigNumber | undefined>();\n  const [metadataLoading, setMetadataLoading] = useState<boolean>(false);\n  const [minting, setMinting] = useState<boolean>(false);\n  // const [gasPrice, setGasPrice] = useState<BigNumber | undefined>();\n  // const [totalPrice, setTotalPrice] = useState<BigNumber | undefined>();\n  const [txHash, setTxHash] = useState<string | undefined>();\n  const [isMinted, setMinted] = useState<boolean>(false);\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    setMetadataLoading(true);\n    setTokenMetadata(undefined);\n    setMinted(false);\n    setTxHash(undefined);\n    setError(undefined);\n\n    fetchTokenMeta(token, tokenId)\n      .then(res => {\n        // setGasEstimation(res.estimation);\n        setTokenMetadata(res.metadata);\n      })\n      .catch(err => setError(\n        (err as Error).message || 'Unknown token metadata loader error'\n      ))\n      .finally(() => setMetadataLoading(false));\n  }, [token, tokenId]);\n\n  // useEffect(() => {\n  //   if (\n  //     tokenPrice !== undefined &&\n  //     gasPrice !== undefined &&\n  //     gasEstimation !== undefined\n  //   ) {\n  //     setTotalPrice(gasEstimation.mul(gasPrice).add(tokenPrice));\n  //   }\n  // }, [tokenPrice, gasPrice, gasEstimation]);\n\n  const mint = useCallback(async () => {\n    if (\n      tokenId !== undefined &&\n      tokenPrice !== undefined //&&\n      // gasPrice !== undefined\n    ) {\n      try {\n        setTxHash(undefined);\n        setMinting(true);\n        setMinted(false);\n        setError(undefined);\n        await token.mintToken(\n          tokenId,\n          {\n            value: tokenPrice,\n            // gasPrice\n          },\n          txHash => setTxHash(txHash),\n          1\n        );\n        setMinting(false);\n        setMinted(true);\n      } catch (err) {\n        setError((err as Error).message || 'Unknown token minting error');\n        setMinting(false);\n        setMinted(false);\n      }\n    }\n  }, [token, tokenId, tokenPrice]);// , gasPrice\n\n  if (tokenId === undefined) {\n    return null;\n  }\n\n  return (\n    <CheckerBlock>\n      {metadataLoading &&\n        <TokenCardWrapper>\n          <PriceTitle>\n            Token metadata loading...&nbsp;\n            <FontAwesomeIcon icon='sync-alt' spin={true} />\n          </PriceTitle>\n        </TokenCardWrapper>\n      }\n\n      {(!isMinted && !metadataLoading && !!tokenMetadata) &&\n        <TokenCardWrapper>\n          <TokenMintCard token={tokenMetadata} />\n          <BlockTitle center>\n            Cossack #{tokenId}\n          </BlockTitle>\n          {/* <GasPriceSelector\n            enabled={!!tokenMetadata && !isMinted}\n            paused={minting || isMinted}\n            provider={provider}\n            onChecked={setGasPrice}\n          /> */}\n          {!!tokenPrice &&\n            <PriceWrapper>\n              <PriceTitle>Minting price</PriceTitle>\n              <PriceValue>{ethersUtils.formatUnits(tokenPrice, 'ether')} ETH</PriceValue>\n            </PriceWrapper>\n          }\n          {/* {!!totalPrice &&\n            <PriceWrapper>\n              <PriceTitle>Total token minting costs (price + gas fees)</PriceTitle>\n              <PriceValue>{ethersUtils.formatUnits(totalPrice, 'ether')} ETH</PriceValue>\n            </PriceWrapper>\n          } */}\n          <MintButton\n            large\n            label='Mint NFT'\n            disabled={\n              minting ||\n              tokenId === undefined ||\n              tokenPrice === undefined //||\n              // gasPrice === undefined\n            }\n            loading={minting}\n            onClick={mint}\n          />\n\n        </TokenCardWrapper>\n      }\n      {isMinted &&\n        <TokenCardWrapper>\n          <PriceTitle large>\n            {`Congratulations! Token #${tokenId} has been successfully minted!`}\n          </PriceTitle>\n        </TokenCardWrapper>\n      }\n      {!!txHash &&\n        <TokenCardWrapper>\n          <TxBlock>\n            <TxTitle>\n              Transaction hash:&nbsp;\n              <TxHashValue\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`${defaultNetwork.blockExplorer}/tx/${txHash}`}\n              >\n                {centerEllipsis(txHash)}\n              </TxHashValue>\n            </TxTitle>\n          </TxBlock>\n        </TokenCardWrapper>\n      }\n      <ErrorMessage message={error} />\n    </CheckerBlock>\n  );\n};\n","import type { CCContract } from '../contractLib';\nimport type { Web3ModalProvider } from '../hooks/useWeb3Modal';\nimport type { CheckedToken } from './AvailChip';\nimport { TakenRange } from '../hooks/useTokenRange';\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useTokenRange } from '../hooks/useTokenRange';\nimport { Container } from './Layout/Container';\nimport { MintButton } from './buttons';\nimport { AvailChip } from './AvailChip';\nimport { MintCard } from './Mint/MintCard';\nimport { ErrorMessage } from './ErrorMessage';\nimport { useAppState } from '../store';\nimport { colors, fonts } from '../styles';\n\nexport interface TokensCheckerProps {\n  token: CCContract;\n  account: string;\n  provider: Web3ModalProvider;\n}\n\nexport const CheckerBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  padding: 40px;\n  background-color: rgb(${colors.grey});\n  margin-right: 8px;\n  width: 100%;\n  color: rgb(${colors.white});\n  border-radius: 20px;\n`;\n\nexport const ChipsBlock = styled.div`\n  margin: 20px 0 0 0;\n`;\n\nexport const QueryLabel = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-bottom: 8px;\n`;\n\nexport const Query = styled.textarea`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.white});\n  background-color: #363636;\n  border-radius: 6px;\n  padding: 10px;\n`;\n\nexport const Alert = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.red});\n  background-color: white;\n  border-radius: 6px;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const inputValidator = (newValue: string, initialValue: string): string =>\n  /^[0-9 ]+$/g.exec(newValue) ? newValue : initialValue;\n\nexport const parseQuery = (query: string, range: TakenRange): number[] =>\n  query\n    .replace(/\\s\\s+/g, ' ')\n    .split(' ')\n    .map(t => parseInt(t))\n    .filter((t, i) => (t >= range.from && t < range.to && i <= 9));\n\nexport const isTokenExists = async (\n  token: CCContract,\n  tokenId: number\n): Promise<boolean> => token.isTokenMintable(tokenId);\n\nexport const TokensChecker = ({\n  token,\n  account,\n  provider\n}: TokensCheckerProps) => {\n  const {\n    isMintingPaused\n  } = useAppState();\n  const [range, tokenPrice, rangeError] = useTokenRange(token);\n  const [query, setQuery] = useState<string>('');\n  const [checking, setChecking] = useState<boolean>(false);\n  const [checkedList, setCheckedList] = useState<CheckedToken[]>([]);\n  const [mintTokenId, setMintTokenId] = useState<number | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const resetCheckerResults = () => {\n    setCheckedList([]);\n    setMintTokenId(undefined);\n    setChecking(false);\n    setError(undefined);\n  };\n\n  const isFounder = useMemo(() => range && range.from === 9000, [range]);\n\n  // const defaultCb = useCallback(() => {\n  //   if (isMintingPaused && !isFounder) {\n  //     setError('Public tokens sale not started yet');\n  //     setTimeout(() => {\n  //       setError(undefined);\n  //     }, 2500);\n  //   }\n  // }, [isMintingPaused, isFounder]);\n\n  useEffect(() => {\n    setQuery('');\n    resetCheckerResults();\n  }, [account]);\n\n  useEffect(() => {\n    setError(rangeError);\n  }, [rangeError]);\n\n  const check = useCallback(async () => {\n    try {\n      resetCheckerResults();\n      setChecking(true);\n\n      const parsedQuery = parseQuery(query, range);\n\n      if (parsedQuery.length === 0) {\n        throw new Error(\n          'None of the requested Ids are within the allowed range.'\n        );\n      }\n\n      const checked: CheckedToken[] = await Promise.all(\n        parsedQuery.map(async tokenId => ({\n          tokenId,\n          available: await isTokenExists(token, tokenId)\n        }))\n      );\n\n      setCheckedList(checked);\n      setChecking(false);\n    } catch (err) {\n      setError(\n        (err as Error).message || 'Unknown tokens availability checker error'\n      );\n      setChecking(false);\n    }\n  }, [token, query, range]);\n\n  if (!token || !account || !provider) {\n    return null;\n  }\n\n  if (!range) {\n    return (\n      <Container>\n        <CheckerBlock>\n          <div>\n            Tokens availability checker is loading...&nbsp;\n            <FontAwesomeIcon icon='sync-alt' spin={true} />\n          </div>\n        </CheckerBlock>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <CheckerBlock>\n        {isMintingPaused && <Alert>At the moment tokens minting is paused. Please back later</Alert>}\n        <QueryLabel>\n          {`To check tokens availability please enter tokens Ids in the range ${range.from}-${range.to} separated by whitespace (up to 10 Ids)`}\n        </QueryLabel>\n        <Query\n          rows={1}\n          value={query}\n          onChange={e => setQuery(inputValidator(e.target.value, query))}\n        />\n        <div>\n          <MintButton\n            label='Check availability'\n            loading={checking}\n            disabled={checking}\n            onClick={check}\n          />\n        </div>\n        <ErrorMessage message={error} />\n        {checkedList.length !== 0 &&\n          <ChipsBlock>\n            {checkedList.map(\n              (t, i) => <AvailChip\n                          key={i}\n                          token={t}\n                          selected={t.tokenId === mintTokenId}\n                          isFounder={isFounder}\n                          onClick={\n                            () => setMintTokenId(t.tokenId)\n                            // () => isMintingPaused && !isFounder\n                            //   ? defaultCb()\n                            //   : setMintTokenId(t.tokenId)\n                          }\n                        />\n            )}\n          </ChipsBlock>\n        }\n\n        {(!isMintingPaused || (isMintingPaused && isFounder)) &&\n          <MintCard\n            token={token}\n            provider={provider}\n            tokenId={mintTokenId}\n            tokenPrice={tokenPrice}\n          />\n        }\n      </CheckerBlock>\n    </Container>\n  );\n};\n","import type { BigNumber } from 'ethers';\nimport type { CCContract } from '../contractLib';\nimport { useState, useEffect } from 'react';\nimport { BigNumber as BN } from 'ethers';\n\nexport interface TakenRange {\n  from: number;\n  to: number;\n}\n\nexport type UseTokenRangeHook = [\n  range: TakenRange,\n  price: BigNumber,\n  error: string | undefined\n];\n\nexport const useTokenRange = (token: CCContract): UseTokenRangeHook => {\n  const [price, setPrice] = useState<BigNumber | undefined>();\n  const [range, setRange] = useState<TakenRange | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  useEffect(() => {\n    const resetState = () => {\n      setError(undefined);\n      setPrice(undefined);\n      setRange(undefined);\n    };\n\n    const checkIsFounder = async () => {\n      try {\n        if (token) {\n          const tokenPrice = await token.getPrice();\n          const isFounder = await token.isFounder();\n          setPrice(\n            !isFounder\n              ? tokenPrice\n              : BN.from(0)\n          );\n          setRange(\n            !isFounder\n              ? {\n                from: 0,\n                to: 8999\n              }\n              : {\n                from: 9000,\n                to: 9999\n              }\n          );\n        } else {\n          resetState();\n        }\n      } catch (error) {\n        setError(error.message || 'Unknown error');\n        resetState();\n      }\n    };\n\n    checkIsFounder();\n  }, [token]);\n\n  return [range, price, error];\n};\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../styles';\n\nexport interface ImageProps {\n  src: string;\n}\n\nexport const TeamBlockWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 10px;\n\n  @media (max-width: ${responsive.md}) {\n    display: block;\n    max-width: 230px;\n    margin: 0 auto 20px auto;\n  }\n`;\n\nexport const TeamBlockTitle = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-top: 80px;\n  margin-left: 4px;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Dude = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 20px;\n  cursor: pointer;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n    margin-bottom: 12px;\n\n    &:nth-child(2) {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DudeTitle = styled.div`\n  font-size: ${fonts.size.tiny};\n  font-weight: ${fonts.weight.bold};\n  color: rgb(${colors.lightgrey});\n  margin-top: 5px;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n  }\n`;\n\nexport const DudeImage = styled.img<ImageProps>`\n  width: 100px;\n  height: 100px;\n  border: 1px solid rgb(${colors.grey});\n  border-radius: 6px;\n`;\n\nexport const Team = () => {\n\n  return (\n    <>\n      <TeamBlockTitle>Team</TeamBlockTitle>\n      <TeamBlockWrapper>\n        <Dude onClick={() => window.open('https://www.facebook.com/andrey.ermolenko', '_blank')}>\n          <DudeImage src='images/t3.png' />\n          <DudeTitle>Andrey<br/>Ermolenko</DudeTitle>\n        </Dude>\n        <Dude onClick={() => window.open('https://www.linkedin.com/in/aleksey-chusov-94a928199', '_blank')}>\n          <DudeImage src='images/t4.png' />\n          <DudeTitle>Aleks<br/>Chusov<br/>(time4web3)</DudeTitle>\n        </Dude>\n        <Dude onClick={() => window.open('https://www.linkedin.com/in/kostiantyn-smyrnov/', '_blank')}>\n          <DudeImage src='images/t1.png' />\n          <DudeTitle>Kostiantyn<br/>Smyrnov</DudeTitle>\n        </Dude>\n      </TeamBlockWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { colors, fonts, responsive } from '../styles';\nimport { centerEllipsis } from '../utils/strings';\nimport { getTokenAddress } from '../config';\n\nexport const LinkWrapper = styled.div`\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.lightgrey});\n  margin: 40px 0 40px 0;\n\n  @media (max-width: ${responsive.md}) {\n    text-align: center;\n  }\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n  color: rgb(${colors.white});\n`;\n\nexport const Label = styled.span`\n  white-space: nowrap;\n`;\n\nexport const Br = styled.br`\n  display: none;\n  @media (max-width: ${responsive.md}) {\n    display: inline-block;\n  }\n`;\n\nexport const ContractLink = () => {\n\n  return (\n    <LinkWrapper>\n      <Label>\n        <strong>Verified smart contract:</strong>&nbsp;\n      </Label>\n      <Br />\n      <Link\n        href={`https://etherscan.io/address/${getTokenAddress()}#code`}\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        {centerEllipsis(getTokenAddress())}\n      </Link>\n    </LinkWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { useAppState } from '../store';\nimport { SignInButton, SignOutButton } from '../components/buttons/web3Modal';\nimport { Account } from '../components/Account';\nimport { MyTokens } from '../components/MyTokens';\nimport { TokensChecker } from '../components/TokensChecker';\nimport { Team } from '../components/Team';\nimport { ContractLink } from '../components/ContractLink';\nimport { colors, fonts, responsive } from '../styles';\n\n// Config\nimport { getNetworksNames } from '../config';\n\nconst allowedNetworksNames = getNetworksNames();\n\nconst PageWrapper = styled.div`\n  margin: 32px auto 0 auto;\n  padding: 0 20px 40px 20px;\n  width: 100%;\n  max-width: 1024px;\n  overflow: hidden;\n\n  @media (max-width: ${responsive.md}) {\n    margin: 28px auto 0 auto;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 34px;\n\n  @media (max-width: ${responsive.md}) {\n    margin-bottom: 28px;\n  }\n`;\n\nconst Logo = styled.div`\n  display: block;\n  background-image: url(images/logo-grn.svg);\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 36px;\n  height: 36px;\n  margin-right: 8px;\n\n  @media (max-width: ${responsive.md}) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: ${fonts.size.large};\n  font-weight: ${fonts.weight.normal};\n  color: rgb(${colors.white});\n\n  @media (max-width: ${responsive.md}) {\n    font-size: ${fonts.size.small};\n  }\n`;\n\nconst Spacer = styled.div`\n  flex-grow: 1;\n`;\n\nconst AccountBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  white-space: nowrap;\n\n  @media (max-width: ${responsive.md}) {\n    align-items: flex-end;\n    flex-direction: column;\n    white-space: auto;\n  }\n`;\n\nconst SignOutButtonWrapper = styled.div`\n  margin-left: 8px;\n\n  @media (max-width: ${responsive.md}) {\n    /* margin: 6px 0 -32px 0; */\n  }\n`;\n\nconst WrongNetworkMessage = styled.div`\n  padding: 20px;\n  border-radius: 20px;\n  background-color: rgb(${colors.white});\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.medium};\n  color: rgb(${colors.blueblack});\n\n  @media (max-width: ${responsive.md}) {\n    padding: 16px;\n  }\n`;\n\nconst Banner =  styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 34px 0;\n  border-radius: 20px;\n\n  @media (max-width: ${responsive.md}) {\n    border-radius: 18px;\n    margin: 0 0 28px 0;\n  }\n`;\n\nconst BannerCossack = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  background-image: url(images/bn-bg2.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center right;\n  width: auto;\n  height: 400px;\n\n  @media (max-width: ${responsive.md}) {\n    background-size: cover;\n    background-position: center bottom;\n  }\n`;\n\nconst BannerBg = styled.div`\n  background-image: url(images/bn-bg1.svg);\n  background-repeat: no-repeat;\n  background-position: center left;\n  background-size: auto 100%;\n  width: auto;\n  height: 400px;\n  padding: 34px;\n\n  @media (max-width: ${responsive.md}) {\n    background-position: center top;\n    padding: 28px;\n  }\n`;\n\nconst CollectionTitle = styled.div`\n  font-size: 58px;\n  font-weight: ${fonts.weight.bold};\n  line-height: 47px;\n  margin-bottom: 40px;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: 50px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst CollectionInfo = styled.div`\n  font-size: 16px;\n  font-weight: ${fonts.weight.medium};\n  max-width: 370px;\n  margin-bottom: 40px;\n\n  @media (max-width: ${responsive.md}) {\n    font-size: 16px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst OpenSeaLinkBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst OsTitle = styled.div`\n  font-size: 20px;\n  font-weight: ${fonts.weight.bold};\n  margin-right: 12px;\n`;\n\nconst OsLogo = styled.div`\n  background-image: url(images/opensea-logo.png);\n  background-repeat: no-repeat;\n  background-position: center left;\n  background-size: contain;\n  width: 157px;\n  height: 36px;\n`;\n\nexport const Main = () => {\n  const {\n    isEnabled,\n    isRightNetwork,\n    account,\n    token,\n    provider,\n    isOwnTokens\n  } = useAppState();\n\n  return (\n    <PageWrapper>\n      <Header>\n        <Logo />\n        <Title>CryptoCossacks</Title>\n        <Spacer />\n        <AccountBlock>\n          <Account account={account} />\n          <SignOutButtonWrapper>\n            <SignInButton />\n            <SignOutButton />\n          </SignOutButtonWrapper>\n        </AccountBlock>\n      </Header>\n\n      {!isOwnTokens &&\n        <Banner>\n          <BannerCossack>\n            <BannerBg>\n              <CollectionTitle>\n                Crypto<br/>Cossacks\n              </CollectionTitle>\n              <CollectionInfo>\n                A collection that reflects the masculinity, rebelliousness and identity of the Ukrainian people. Each work is a unique blend of history, characters and mystique, adorned with ancient ornaments and inspired by the national Ukrainian style.\n              </CollectionInfo>\n              <OpenSeaLinkBlock onClick={() => {\n                window.open('https://opensea.io/collection/cryptocossacks2022', '_blank');\n              }}>\n                <OsTitle>\n                  Open collection at\n                </OsTitle>\n                <OsLogo />\n              </OpenSeaLinkBlock>\n            </BannerBg>\n          </BannerCossack>\n        </Banner>\n      }\n\n      {!isRightNetwork &&\n        <WrongNetworkMessage>\n          {\n            allowedNetworksNames.length > 1\n              ? `You are connected to a wrong network. Please switch to one of: ${allowedNetworksNames.join(', ')} networks`\n              : `You are connected to a wrong network. Please switch to the ${allowedNetworksNames[0]} network`\n          }\n        </WrongNetworkMessage>\n      }\n\n      {isEnabled &&\n        <>\n          <MyTokens token={token} account={account} />\n          <TokensChecker token={token} account={account} provider={provider} />\n        </>\n      }\n\n      <Team />\n\n      <ContractLink />\n\n    </PageWrapper>\n  );\n};\n","import { AppStateProvider } from './store';\n\n// Pages\nimport { Main } from './pages/Main';\n\nconst App = () => {\n\n  return (\n    <AppStateProvider>\n      <Main />\n    </AppStateProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components';\nimport { globalStyle } from './styles';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n\nconst renderApp = () => {\n  render(\n    <StrictMode>\n      <GlobalStyle />\n      <App />\n    </StrictMode>,\n    document.getElementById('root')\n  );\n};\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}